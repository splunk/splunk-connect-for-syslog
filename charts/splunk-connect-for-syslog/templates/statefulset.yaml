apiVersion: apps/v1
kind: StatefulSet 
metadata:
  name: {{ include "splunk-connect-for-syslog.fullname" . }}
  labels:
    {{- include "splunk-connect-for-syslog.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "splunk-connect-for-syslog.fullname" . }}

  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "splunk-connect-for-syslog.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "splunk-connect-for-syslog.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "splunk-connect-for-syslog.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: SC4S_SNMP_TRAP_COLLECT
            value: "no"          
          - name: SC4S_CONTAINER_HOST
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: SC4S_RUNTIME_ENV
            value: "k8s"            
          - name: SC4S_DEST_SPLUNK_HEC_DEFAULT_URL
            value: "{{ .Values.splunk.hec_url }}"
          {{- if .Values.splunk.hec_token }}
          - name: SC4S_DEST_SPLUNK_HEC_DEFAULT_TOKEN
            value:  "{{ .Values.splunk.hec_token }}"
          {{- else }}
          - name: SC4S_DEST_SPLUNK_HEC_DEFAULT_TOKEN
            valueFrom:
              secretKeyRef:
                key: hec_token
                name: splunk-connection
          {{- end }}
          - name: SC4S_DEST_SPLUNK_HEC_DEFAULT_TLS_VERIFY
            value: "{{ .Values.splunk.hec_verify_tls }}"
          {{- if .Values.persistence.enabled }}              
          - name: SC4S_DEST_SPLUNK_HEC_DEFAULT_DISKBUFF_ENABLE
            value: "yes"
          {{- else }}            
          - name: SC4S_DEST_SPLUNK_HEC_DEFAULT_DISKBUFF_ENABLE
            value: "no"
          {{- end }}
          {{- if .Values.sc4s.existingCert }}
          - name: SC4S_SOURCE_TLS_ENABLE
            value: "yes"
          {{- else }}            
          - name: SC4S_SOURCE_TLS_ENABLE
            value: "no"
          {{- end }}
          {{- if .Values.sc4s }}
          {{- if .Values.sc4s.vendor_product }}
            {{- range $vp := .Values.sc4s.vendor_product }}
                {{- if $vp.ports.tcp }}
          - name: SC4S_LISTEN_{{ $vp.name | upper }}_TCP_PORT
            value: {{ $vp.ports.tcp | join "," | quote}}
                {{- end }}
                {{- if $vp.ports.udp }}
          - name: SC4S_LISTEN_{{ $vp.name | upper }}_UDP_PORT
            value: {{ $vp.ports.udp | join "," | quote}}
                {{- end }}                
                {{- if $vp.ports.tls }}
          - name: SC4S_LISTEN_{{ $vp.name | upper }}_TLS_PORT
            value: {{ $vp.ports.tls | join "," | quote}}
                {{- end }}                
                {{- if $vp.ports.rfc6587 }}
          - name: SC4S_LISTEN_{{ $vp.name | upper }}_RFC6587_PORT
            value: {{ $vp.ports.rfc6587 | join "," | quote}}
                {{- end }}                
                {{- if $vp.ports.rfc5426 }}
          - name: SC4S_LISTEN_{{ $vp.name | upper }}_RFC5426_PORT
            value: {{ $vp.ports.rfc5426 | join "," | quote}}
                {{- end }}                
                {{- if $vp.ports.rfc5425 }}
          - name: SC4S_LISTEN_{{ $vp.name | upper }}_RFC5425_PORT
            value: {{ $vp.ports.rfc5425 | join "," | quote}}
                {{- end }}                
                {{- if $vp.options }}
                {{- if $vp.options.listen }}
                  {{- range $vpolkey, $vpolvalue := $vp.options.listen }}
          - name: SC4S_LISTEN_{{ $vp.name | upper }}_{{ $vpolkey | upper }}
            value: {{ $vpolvalue | quote}}
                  {{- end }}                
                {{- end }}                
                {{- end }}                
            {{- end }}
          {{- end }}
          {{- end }}

          ports:
            - name: bsd-dflt-tcp
              containerPort: 514
              protocol: TCP
            - name: bsd-dflt-udp
              containerPort: 514
              protocol: UDP
            - name: bsd-dflt-tls
              containerPort: 6514
              protocol: TCP
            - name: ietf-dflt-tcp
              containerPort: 601
              protocol: TCP
            - name: ietf-dflt-udp
              containerPort: 601
              protocol: UDP
            - name: ietf-dflt-tls
              containerPort: 5425
              protocol: TCP
            - name: health
              containerPort: 8080
              protocol: TCP
          {{- if .Values.sc4s }}
          {{- if .Values.sc4s.vendor_product }}
            {{- range $vp := .Values.sc4s.vendor_product }}
                {{- if $vp.ports.tcp }}
                  {{- range $p := $vp.ports.tcp }}
            - name: bsd-{{ $p }}-tcp
              containerPort: {{ $p }}
              protocol: TCP
                  {{- end }}
                {{- end }}
                {{- if $vp.ports.udp }}
                  {{- range $p := $vp.ports.udp }}
            - name: bsd-{{ $p }}-udp
              containerPort: {{ $p }}
              protocol: UDP
                  {{- end }}
                {{- end }}                
                {{- if $vp.ports.tls }}
                  {{- range $p := $vp.ports.tls }}
            - name: bsd-{{ $p }}-tls
              containerPort: {{ $p }}
              protocol: TCP
                  {{- end }}
                {{- end }}                
                {{- if $vp.ports.rfc6587 }}
                  {{- range $p := $vp.ports.rfc6587 }}
            - name: 6587-{{ $p }}-tcp
              containerPort: {{ $p }}
              protocol: TCP
                  {{- end }}
                {{- end }}                
                {{- if $vp.ports.rfc5425 }}
                  {{- range $p := $vp.ports.rfc5425 }}
            - name: 5425-{{ $p }}-tls
              containerPort: {{ $p }}
              protocol: TCP
                  {{- end }}
                {{- end }}                
                {{- if $vp.ports.rfc5426 }}
                  {{- range $p := $vp.ports.rfc5426 }}
            - name: 5426-{{ $p }}-udp
              containerPort: {{ $p }}
              protocol: UDP
                  {{- end }}
                {{- end }}                
            {{- end }}
          {{- end }}
          {{- end }}                        
          volumeMounts:
          {{- if .Values.persistence.enabled }}              
          - name: data
            mountPath: /var/lib/syslog-ng/
          {{- end }}
          {{- if .Values.sc4s.existingCert }}
          - name: tls
            mountPath: /etc/syslog-ng/tls/
            readOnly: true
          {{- end }}
          {{- if .Values.sc4s.context_files }}
          - name: context
            mountPath: /etc/syslog-ng/conf.d/configmap/context/
            readOnly: true
          {{- end }}
          {{- if .Values.sc4s.config_files }}
          - name: config
            mountPath: /etc/syslog-ng/conf.d/configmap/config/app_parsers
            readOnly: true
          {{- end }}
          {{- if .Values.sc4s.addons }}
          - name: addons
            mountPath: /etc/syslog-ng/conf.d/configmap/addons/
            readOnly: true
          {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 3              
            timeoutSeconds: 5            
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            failureThreshold: 60
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        {{- if .Values.sc4s.existingCert }}
        - name: tls
          secret:
            secretName: {{ .Values.sc4s.existingCert }}
        {{- end }}               
        {{- if .Values.sc4s.context_files }}
        - name: context
          configMap:
            name: {{ include "splunk-connect-for-syslog.fullname" . }}-context
        {{- end }}
        {{- if .Values.sc4s.config_files }}
        - name: config
          configMap:
            name: {{ include "splunk-connect-for-syslog.fullname" . }}-config
        {{- end }}
        {{- if .Values.sc4s.addons }}
        - name: addons
          configMap:
            name: {{ include "splunk-connect-for-syslog.fullname" . }}-addons
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:          
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - {{ .Release.Name }}
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "splunk-connect-for-syslog.name" . }}
              topologyKey: "kubernetes.io/hostname"      
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
      annotations:
      {{- with .Values.persistence.annotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.persistence.storageClass }}
      storageClassName: {{ .Values.persistence.storageClass | quote }}
      {{- end }}      
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }} 
  {{- end }}
