# ===============================================================================================
# source definition for remote devices
# ===============================================================================================

# ===============================================================================================
# Defaults for the default-network-drivers() source:
# 514, both TCP and UDP, for RFC3164 (BSD-syslog) formatted traffic
# 601 TCP, for RFC5424 (IETF-syslog) formatted traffic
# 6514 TCP, for TLS-encrypted traffic
# ===============================================================================================
source s_default-ports {

    channel {
        source {
            syslog (
                transport("udp")
                port(514)
                ip-protocol(4)
                so-rcvbuf({{- getenv "SC4S_SOURCE_UDP_SO_RCVBUFF" "425984"}})
                keep-hostname(yes)
                keep-timestamp(yes)
                use-dns(no)
                use-fqdn(no)
                chain-hostnames(off)
                flags(no-parse)
            );

            network (
                transport("tcp")
                port(514)
                ip-protocol(4)
                max-connections({{- getenv "SC4S_SOURCE_TCP_MAX_CONNECTIONS" "2000"}})
                log-iw-size({{- getenv "SC4S_SOURCE_TCP_IW_SIZE" "20000000"}})
                log-fetch-limit({{- getenv "SC4S_SOURCE_TCP_FETCH_LIMIT" "2000"}})
                keep-hostname(yes)
                keep-timestamp(yes)
                use-dns(no)
                use-fqdn(no)
                chain-hostnames(off)
                flags(no-parse)
            );

            {{- if eq (getenv "SC4S_SOURCE_TLS_ENABLE") "yes"}}
            network(
                port(6514)
                transport("tls")
                ip-protocol(4)
                max-connections({{getenv "SC4S_SOURCE_TCP_MAX_CONNECTIONS" "2000"}})
                log-iw-size({{getenv "SC4S_SOURCE_TCP_IW_SIZE" "20000000"}})
                log-fetch-limit({{getenv "SC4S_SOURCE_TCP_FETCH_LIMIT" "2000"}})
                keep-hostname(yes)
                keep-timestamp(yes)
                use-dns(no)
                use-fqdn(no)
                chain-hostnames(off)
                flags(no-parse)
                tls(allow-compress(yes)
                    key-file("/opt/syslog-ng/tls/server.key")
                    cert-file("/opt/syslog-ng/tls/server.pem")
                    ssl-options({{- getenv "SC4S_SOURCE_TLS_OPTIONS" "no-sslv2, no-sslv3, no-tlsv1" }})
                    cipher-suite("{{- getenv "SC4S_SOURCE_TLS_CIPHER_SUITE" "HIGH:!aNULL:!eNULL:!kECDH:!aDH:!RC4:!3DES:!CAMELLIA:!MD5:!PSK:!SRP:!KRB5:@STRENGTH" }}")
                    )
            );

            {{- end }}
        };
        #TODO: #60 Remove this function with enhancement
        rewrite(set_rfcnonconformant);

        if {
            filter(f_rfc5424_strict);
            parser {
                    syslog-parser(flags(syslog-protocol  store-raw-message));
                };
            rewrite(set_rfc5424_strict);
        } elif {
            filter(f_rfc5424_noversion);
            parser {
                    syslog-parser(flags(syslog-protocol  store-raw-message));
                };
            rewrite(set_rfc5424_noversion);
        } elif {
            parser {cisco-parser()};
            rewrite(set_cisco_ios);
        } else {
            parser {
                syslog-parser(time-zone({{- getenv "SC4S_DEFAULT_TIMEZONE" "GMT"}}) flags(store-raw-message));
            };
            rewrite(set_rfc3164);
        };

        rewrite(r_set_splunk_default);

        parser {
            vendor_product_by_source();
        };
    };
};