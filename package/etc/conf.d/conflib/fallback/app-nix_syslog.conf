block parser nix_syslog_fallback-parser() {    
 channel {
        rewrite {
            r_set_splunk_dest_default(
                index("osnix")
                sourcetype('nix:syslog')
                vendor_product("nix_syslog")
                template("t_hdr_msg")
            );            
        };       

        rewrite {
            set("${PROGRAM}", value(".PROGRAM"));
            subst('^\/(?:[^\/]+\/)+', "" , value(".PROGRAM"));
            set("program:${.PROGRAM}", value(".splunk.source"));
        };

        if {
            filter(f_is_rfc5424_strict);
            rewrite { set("$(template t_5424_hdr_sdata_msg)" value("MSG")); };
        } else {
            rewrite { set("$(template t_hdr_msg)" value("MSG")); };            
        };

        rewrite {r_set_destinations(group("NIX_SYSLOG"))};                            
        parser {p_add_context_splunk(key("${fields.sc4s_vendor_product}")); };
        parser (compliance_meta_by_source);

   };
};
application nix_syslog_fallback[fallback] {
	filter { 
        filter(f_is_rfc5424_strict);
        or (
            filter(f_is_rfc3164) and "${PROGRAM}" ne ""
            #and program('^[A-Za-z\-_]+$' )
        )
    };	
    parser { nix_syslog_fallback-parser(); };   
};
