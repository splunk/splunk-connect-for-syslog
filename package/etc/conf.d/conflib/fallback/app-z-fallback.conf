block parser z_fallback-parser() {    
    channel {
        rewrite { 
            set("SC4S_fallback", value("fields.sc4s_vendor_product"));
            set("sc4s:fallback" value(".splunk.sourcetype"));
        };

        rewrite { set("$(template t_JSON_3164)" value("MSG")); };
        
        rewrite { 
            set("yes", 
                value(".dest.global.hec") 
                condition(
                    '$(if ("`SC4S_DEST_SPLUNK_HEC_GLOBAL`" ne "") "`SC4S_DEST_SPLUNK_HEC_GLOBAL`" "yes")' ne "no"
                )
            );            
            set("yes", 
                value(".dest.global.archive") 
                condition(
                    '$(if ("`SC4S_ARCHIVE_GLOBAL`" ne "") "`SC4S_ARCHIVE_GLOBAL`" "no")' ne "no"
                ) 
            );
            
        };
        parser {p_add_context_splunk(key("${fields.sc4s_vendor_product}")); };
        parser (compliance_meta_by_source);
    };
};
application z_fallback[fallback] {
    filter {
        "${fields.sc4s_vendor_product}" eq ""
    };
	parser { z_fallback-parser(); };   
};
