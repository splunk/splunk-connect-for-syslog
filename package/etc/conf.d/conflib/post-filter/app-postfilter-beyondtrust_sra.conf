template t_beyondtrust_sra {
        template("${.values.siteid}:${.values.seq}:${values.num}:${.gb.message}");
};

block parser app-postfilter-beyondtrust_sra() {
    channel {

        parser{
            grouping-by(
                scope(program)
                key("${.values.siteid}")
                trigger("$(context-length)" >= "${.values.num}")
                sort-key("${.values.seq}")
                aggregate(
                    value(".gb.complete" "1")
                    value(".gb.message" "$(implode ';' $(list-slice 0:-1 $(context-values ${.message})))")
                    value(".values.siteid", "00")
                    value(".values.num", "${.values.siteid}@1")
                    value("PROGRAM" "${PROGRAM}@1")
                    value(".splunk.sc4s_template", "t_beyondtrust_sra")
                    value("fields.sc4s_merge_count", "$(context-length)")
                    value(".structured.level", "full")
                    value(".structured.splunk_hec", "json")
                    value(".structured.syslog", "sdata")
                    inherit-mode(context)
                )
                timeout(10)
            );
        };

        rewrite {
            r_set_splunk_dest_update(
                vendor('null') product('queue')
                condition("${.gb.complete}" ne "1")
            );
        };


   };
};
application app-postfilter-beyondtrust_sra[sc4s-postfilter] {
	filter {
        "${PROGRAM}" eq "BG"
        and "${.values.num}" > "1";
    };
    parser { app-postfilter-beyondtrust_sra(); };
};

