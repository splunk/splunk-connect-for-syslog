block parser app-postfilter-checkpoint_splunk_02-group() {    
    channel {
        parser {
            grouping-by(
                key("${.values.loguid}")
                #This looks silly but we have no way of knowing if an event is complete so 
                #We must make an impossible condition and rely on time out
                trigger("1" == "2")
                aggregate(
                    value(".gb.complete" "1")
                    inherit-mode(last-message)
                )
                timeout(`SC4S_LISTEN_CHECKPOINT_SPLUNK_NOISE_CONTROL_SECONDS`)
            );
        };
        rewrite { 
            r_set_splunk_dest_update(
                vendor_product('null_queue')
                condition("${.gb.complete}" ne "1")
            );
        };
    };
};

application app-postfilter-checkpoint_splunk_02-group[sc4s-postfilter] {
	filter { 
        "${fields.sc4s_vendor_product}" eq "checkpoint_splunk"
        and "`SC4S_LISTEN_CHECKPOINT_SPLUNK_NOISE_CONTROL`" eq "yes"
        and "${.values.loguid}" ne "";
    };	
    parser { app-postfilter-checkpoint_splunk_02-group(); };   
};