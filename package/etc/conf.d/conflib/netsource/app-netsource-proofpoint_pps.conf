
filter f_proofpoint_pps_filter {
    match('^(background|cvt|filter|pps)_instance\d+$' value("PROGRAM") type("pcre"))
    or match('^\/opt\/proofpoint\/pps-\d\.\d\.\d\.\d+\/\S' value("PROGRAM") type("pcre")) 
    or match('^queued-(alert|default|digest|reinject|released)$' value("PROGRAM") type("pcre"))
    ;
};

block parser app-netsource-proofpoint_pps() {    
 channel {
     
        rewrite {
            set("${PROGRAM}", value(".PROGRAM"));
            subst('^\/(?:[^\/]+\/)+', "" , value(".PROGRAM"));
            r_set_splunk_dest_default(
                index('email')
                sourcetype('pps_mail_log')
                vendor("proofpoint")
                product("pps")
                template('t_hdr_msg')
            );            
        };       

        rewrite {
            r_set_splunk_dest_update(
                    class('sendmail')
            );
        };
        rewrite {
            r_set_splunk_dest_update(
                    class('filter')
                    sourcetype('pps_filter_log')
                    condition(filter(f_proofpoint_pps_filter))
            );
        };    
   };
};
application app-netsource-proofpoint_pps[sc4s-network-source] {
	filter {          
        (
            "${.netsource.sc4s_vendor_product}" eq "proofpoint_pps"
            or "${.netsource.sc4s_vendor_product}" eq "proofpoint_pps_filter"
            or "${.netsource.sc4s_vendor_product}" eq "proofpoint_pps_sendmail"
        )
        or "${SOURCE}" eq "s_PROOFPOINT_PPS"
        and (
            match('^(background|cvt|filter|pps)_instance\d+$' value("PROGRAM") type("pcre")) or
            match('^\/opt\/proofpoint\/pps-\d\.\d\.\d\.\d+\/\S' value("PROGRAM") type("pcre")) or
            match('^queued-(alert|default|digest|reinject|released)$' value("PROGRAM") type("pcre"))
            )
        and "${fields.sc4s_syslog_format}" ne "cef" 
        and not program("CEF")
    };	
    parser { app-netsource-proofpoint_pps(); };   
};
