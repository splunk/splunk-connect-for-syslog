filter f_cisco_esa_http {
    match('https?\s*service\s*', value("MESSAGE"))
    or match('[sS]ession\s*\w+\s*from\s*', value("MESSAGE"))
    or match('\s*PERIODIC\s*REPORTS\s*:\s*', value("MESSAGE"))
    or match('\s*req\s*:.+\s*user\s*:\s*.+\s*id\s*:\s*', value("MESSAGE"))
    or match('testmaillog\s*:\s*[iI]nfo\s*:', value("MESSAGE"))
    or match('[sS]ystem\s*is\s*coming\s*up', value("MESSAGE"))
};

filter f_cisco_esa_textmail {
    match('mail_logs:', value("MESSAGE"))
    or match('MID\s+\d+', value("MESSAGE"))
    or match('ICID\s+\d+', value("MESSAGE"))
    or match('DCID\s+\d+', value("MESSAGE"))
    or match('RID\s+\[?(\d+(?:\s*,\s*\d+)*)', value("MESSAGE"))
    or match('(?:SplunkMailSyslog|MAIL_SecurityAudit|CES_VPN_Mail_SecurityAudit)\s*:', value("MESSAGE"))
};

filter f_cisco_esa_amp {
    match('SHA256:', value("MESSAGE"))
    or match('File\s*not\s*uploaded\s*for\s*analysis', value("MESSAGE"))
    or match('Response\s*received\s*for\s*file\s*reputation\s*query\s*from\s*Cloud', value("MESSAGE"))
    or match('File\s*reputation\s*query\s*initiating', value("MESSAGE"))
};

filter f_cisco_esa_authentication {
    match('[Ii]nfo\s*:\s*Begin\s*Logfile', value("MESSAGE"))
    or match('authenticated\s*successfully.', value("MESSAGE"))
    or match('successfully\s*logged\s*on\s*from', value("MESSAGE"))
    or match('An\s*authentication\s*attempt', value("MESSAGE"))
    or match('failed\s*authentication.', value("MESSAGE"))
    or match('Time\s*offset\s*from\s*UTC:', value("MESSAGE"))
    or match('[vV]ersion:\s+.*\s+SN:\s+.*', value("MESSAGE"))
    or match('\s*login|logout:\s*[^\s]*\s*[Uu]ser:[\w\-]+\s*session:[^\s]+', value("MESSAGE"))
    or match('MAR_SecurityAudit', value("MESSAGE"))
};


block parser cisco_esa-parser() {    
 channel {
        rewrite {
            set("cisco_esa", value("fields.sc4s_vendor_product"));        
            set("email", value(".splunk.index"));
            set("${PROGRAM}", value(".PROGRAM"));
            subst('^\/(?:[^\/]+\/)+', "" , value(".PROGRAM"));
            set("program:${.PROGRAM}", value(".splunk.source"));
            set("cisco:esa", value(".splunk.sourcetype"));
            #set-tag("log_path_known");
            ##set-tag("cisco_esa");      
                  
        };       

        if {
            filter(f_cisco_esa_amp);
            rewrite {
                set("esa:amp", value(".splunk.source"));
                set("cisco:esa:amp", value(".splunk.sourcetype"));
            };
        } elif {
            filter(f_cisco_esa_http);
            rewrite {
                set("esa:http", value(".splunk.source"));
                set("cisco:esa:http", value(".splunk.sourcetype"));
            };
        } elif {
            filter(f_cisco_esa_textmail);
            rewrite {
                set("esa:textmail", value(".splunk.source"));
                set("cisco:esa:textmail", value(".splunk.sourcetype"));
            };
        } elif {
            filter(f_cisco_esa_authentication);
            rewrite {
                set("esa:authentication", value(".splunk.source"));
                set("cisco:esa:authentication", value(".splunk.sourcetype"));
            };
        } else {
            rewrite { set("$(template t_hdr_msg)" value("MSG")); };
        };
        
        rewrite { 
            set("yes", 
                value(".dest.global.hec") 
                condition(
                    '$(if ("`SC4S_DEST_SPLUNK_HEC_GLOBAL`" ne "") "`SC4S_DEST_SPLUNK_HEC_GLOBAL`" "yes")' ne "no"
                )
            );            
            set("yes", 
                value(".dest.global.archive") 
                condition(
                    '$(if ("`SC4S_ARCHIVE_GLOBAL`" ne "") "`SC4S_ARCHIVE_GLOBAL`" "no")' ne "no"
                ) 
            );
            set("yes", 
                value(".dest.global.alts") 
                condition(
                    '$(if ("`SC4S_DEST_GLOBAL_ALTERNATES`" ne "") "yes" "no")' ne "no"
                ) 
            );
            set("`SC4S_DEST_CISCO_ACS_ALTERNATES`", 
                value(".dest.select.alts") 
                condition(
                    '$(if ("`SC4S_DEST_CISCO_ACS_ALTERNATES`" ne "") "yes" "no")' ne "no"
                ) 
            );
            set("`SC4S_DEST_CISCO_ACS_FILTERED_ALTERNATES`", 
                value(".dest.select.filteredalts") 
                condition(
                    '$(if ("`SC4S_DEST_CISCO_ACS_FILTERED_ALTERNATES`" ne "") "yes" "no")' ne "no"               
                ) 
            );      
        };        
        parser {p_add_context_splunk(key("${fields.sc4s_vendor_product}")); };
        parser (compliance_meta_by_source);
        
   };
};
application cisco_esa[network-source] {
	filter { 
        "${.netsource.sc4s_vendor_product}" eq "cisco_esa"
        or "${SOURCE}" eq "s_CISCO_ESA"
    };	
    parser { cisco_esa-parser(); };   
};
