block parser nix_syslog-parser() {    
 channel {
        rewrite {
            set("nix_syslog", value("fields.sc4s_vendor_product"));        
            set("osnix", value(".splunk.index"));
            set("SC4S", value(".splunk.source"));
            set("nix:syslog", value(".splunk.sourcetype"));
            set("t_hdr_msg", value(".splunk.sc4s_template"));
            #set-tag("log_path_known");
            ##set-tag("infoblox");      
                  
        };       

        rewrite {
            set("${PROGRAM}", value(".PROGRAM"));
            subst('^\/(?:[^\/]+\/)+', "" , value(".PROGRAM"));
            set("program:${.PROGRAM}", value(".splunk.source"));
        };

        if {
            filter(f_is_rfc5424_strict);
            rewrite { set("$(template t_5424_hdr_sdata_msg)" value("MSG")); };
        } else {
            rewrite { set("$(template t_hdr_msg)" value("MSG")); };            
        };

        rewrite { 
            set("yes", 
                value(".dest.global.hec") 
                condition(
                    '$(if ("`SC4S_DEST_SPLUNK_HEC_GLOBAL`" ne "") "`SC4S_DEST_SPLUNK_HEC_GLOBAL`" "yes")' ne "no"
                )
            );            
            set("yes", 
                value(".dest.global.archive") 
                condition(
                    '$(if ("`SC4S_ARCHIVE_GLOBAL`" ne "") "`SC4S_ARCHIVE_GLOBAL`" "no")' ne "no"
                ) 
            );
            set("yes", 
                value(".dest.global.alts") 
                condition(
                    '$(if ("`SC4S_DEST_GLOBAL_ALTERNATES`" ne "") "yes" "no")' ne "no"
                ) 
            );
            set("`SC4S_DEST_NIX_SYSLOG_ALTERNATES`", 
                value(".dest.select.alts") 
                condition(
                    '$(if ("`SC4S_DEST_NIX_SYSLOG_ALTERNATES`" ne "") "yes" "no")' ne "no"
                ) 
            );
            set("`SC4S_DEST_NIX_SYSLOG_FILTERED_ALTERNATES`", 
                value(".dest.select.filteredalts") 
                condition(
                    '$(if ("`SC4S_DEST_NIX_SYSLOG_FILTERED_ALTERNATES`" ne "") "yes" "no")' ne "no"               
                ) 
            );      
        };

        parser {p_add_context_splunk(key("${fields.sc4s_vendor_product}")); };
        parser (compliance_meta_by_source);

   };
};
application nix_syslog[network-source] {
	filter { 
        ("${.netsource.sc4s_vendor_product}" eq "nix_syslog"
        or "${SOURCE}" eq "s_NIX_SYSLOG"
        )        
    };	
    parser { nix_syslog-parser(); };   
};
