block parser fireeye_json-parser() {    
 channel {
        filter { 
            message('^<\d+>[^:]+: ({.*}) *$', flags(store-matches));
        };  
        rewrite {
            set("$MESSAGE", value("RAWMSG"));
            set("$1", value("MESSAGE"));
            set("fe_json", value("fields.sc4s_syslog_format"));
                        
            #set-tag("noparse");
            #set-tag("rfc3164_json");      
        };                       
        parser {
            json-parser(
                prefix('.json.')
            );
        };
        rewrite {
            set("fireeye_json", value("fields.sc4s_vendor_product"));        
            set("fireeye", value(".splunk.index"));
            set("SC4S", value(".splunk.source"));
            set("fe_json", value(".splunk.sourcetype"));
            set("hx_json", value(".splunk.sourcetype") condition( "${.json.product}" eq "HX" ));
            set("${.json.alert.host.hostname}", value("HOST") condition( "${.json.alert.host.hostname}" ne ""));
            #set-tag("log_path_known");
            #set-tag("fireeye_json");      
                  
        };       
        if {
            filter { "${.json.alert.event_values.processEvent/timestamp}" ne "" };
            parser { 
                date-parser-nofilter(format('%Y-%m-%dT%H:%M:%S.%f%z')
                template("${.json.alert.event_values.processEvent/timestamp}"));
            };
        } elif {
            filter { "${.json.alert.event_at}" ne "" };
            parser { 
                date-parser-nofilter(format('${.json.alert.event_at}')
                template("${.json.alert.event_values.processEvent/timestamp}"));
            };
        } else {};
        
        rewrite {r_set_destinations(group("FIREEYE"))};                            
        parser {p_add_context_splunk(key("${fields.sc4s_vendor_product}")); };
        parser (compliance_meta_by_source);
        
   };
};
application fireeye_json[raw-syslog] {
	filter { 
        message('<\d+>fe[^:]+: {')
        and message('} *$');
    };	

    parser { fireeye_json-parser(); };   
};
