rewrite set_raw_nopri_bsd{
    set-tag("wireformat:raw_nopri_bsd");
};
filter f_is_raw_nopri_bsd{
    tags("wireformat:raw_nopri_bsd");
};

block parser app-raw-bsd_nopri() {
    channel {
        if ("`SC4S_DISABLE_DROP_INVALID_RAW_BSD`" eq "yes") {
            parser {
                syslog-parser(
                    drop-invalid(no)
                    flags(assume-utf8, guess-timezone));
            };
        } elif {
            parser {
                syslog-parser(
                    drop-invalid(yes)
                    flags(assume-utf8, guess-timezone));
            };
        } else {};
        
        if {
            filter{
                not host('^[a-zA-Z0-9_\-\.]+$')
            };
            rewrite {
                set("${HOST} $(template t_hdr_msg)" value("MSG"));
                unset(value("LEGACY_MSGHDR"));
                unset(value("PID"));
                unset(value("PROGRAM"));
                set('$SOURCEIP' value('HOST'));
            };
        };
        if {
            # If program is probably not valid cleanup MESSAGE so log paths don't have too
            # This isn't great for performance but is reliable good reason to use 5424
            parser(app-plugin-syslog-fix-program);
            rewrite {
                set("$(template t_hdr_msg)" value("MSG"));
                unset(value("LEGACY_MSGHDR"));
                unset(value("PID"));
                unset(value("PROGRAM"));
            };
        };
        #Note this should be RFC this tag is being set to allow routing to rfc destinations
        rewrite(set_rfc);
        rewrite(set_rfc3164);
        rewrite(set_raw);
        rewrite(set_raw_nopri_bsd);
   };
};
application app-raw-bsd_nopri[sc4s-raw-syslog] {
    filter {
        message('^\w\w\w \d\d \d\d:\d\d:\d\d ');
    };
    parser { app-raw-bsd_nopri(); };
};
