block parser f5_bigip_syslog-parser() {    
 channel {
        filter { 
            message('^(\<\d+> ?\w\w\w  ?\d{1,2} \d\d:\d\d:\d\d) (?:([^\/ ]+)\/)?([^ ]+) (alert|crit|debug|emerg|error|err|info|notice|warning) (.*)', flags(store-matches))
            ;
        };        
        rewrite {
            set("$2" value("fields.slot") condition("$2" ne ""));
        };
        parser {
            syslog-parser(

                flags(assume-utf8, guess-timezone, store-raw-message)
                template("$1 $3 $5")
                );

        };
        if {
            # If program is probably not valid cleanup MESSAGE so log paths don't have too
            # This isn't great for performance but is reliable good reason to use 5424
            filter{
                "${MSGHDR}" ne "${LEGACY_MSGHDR}"
                or not program('^[a-zA-Z0-9-_\/\(\)]+$')
                or program('--')
            };
            rewrite {
                set("$(template t_hdr_msg)" value("MSG"));
                unset(value("LEGACY_MSGHDR"));
                unset(value("PID"));                
                unset(value("PROGRAM"));                
            };                    
             
        };
        rewrite {
            set("f5_bigip", value("fields.sc4s_syslog_format"));
        };                       
        rewrite {
            r_set_splunk_dest_update(
                vendor_product('null_queue')
                condition("`SC4S_SOURCE_MARK_MESSAGE_NULLQUEUE`" ne "no" and message('-- MARK --'))
            );
        };
         
   };
};
application f5_bigip_syslog[sc4s-raw-syslog] {
	filter { 
        message('^(\<\d+> ?\w\w\w  ?\d{1,2} \d\d:\d\d:\d\d) (?:([^\/]+)\/)?([^ ]+) (alert|crit|debug|emerg|error|err|info|notice|warning) ')
        ;
    };	
    parser { f5_bigip_syslog-parser(); };   
};

