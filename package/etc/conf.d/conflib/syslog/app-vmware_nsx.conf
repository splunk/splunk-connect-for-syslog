block parser vmware_nsx-parser() {    
 channel {
        rewrite {
            set("vmware_nsx", value("fields.sc4s_vendor_product"));        
            set("infraops", value(".splunk.index"));
            set("vmware:vsphere:nsx", value(".splunk.sourcetype"));
            set("t_5424_hdr_sdata_msg", value(".splunk.sc4s_template"));
            #set-tag("log_path_known");
            ##set-tag("vmware_nsx");      

            set("${PROGRAM}", value(".PROGRAM"));
            subst('^\/(?:[^\/]+\/)+', "" , value(".PROGRAM"));
            set("program:${.PROGRAM}", value(".splunk.source"));             
                  
        };       
        rewrite { 
            set("yes", 
                value(".dest.global.hec") 
                condition(
                    '$(if ("`SC4S_DEST_SPLUNK_HEC_GLOBAL`" ne "") "`SC4S_DEST_SPLUNK_HEC_GLOBAL`" "yes")' ne "no"
                )
            );            
            set("yes", 
                value(".dest.global.archive") 
                condition(
                    '$(if ("`SC4S_ARCHIVE_GLOBAL`" ne "") "`SC4S_ARCHIVE_GLOBAL`" "no")' ne "no"
                ) 
            );
            set("yes", 
                value(".dest.global.alts") 
                condition(
                    '$(if ("`SC4S_DEST_GLOBAL_ALTERNATES`" ne "") "yes" "no")' ne "no"
                ) 
            );
            set("`SC4S_DEST_VMWARE_VSPHERE_ALTERNATES`", 
                value(".dest.select.alts") 
                condition(
                    '$(if ("`SC4S_DEST_VMWARE_VSPHERE_ALTERNATES`" ne "") "yes" "no")' ne "no"
                ) 
            );
            set("`SC4S_DEST_VMWARE_VSPHERE_FILTERED_ALTERNATES`", 
                value(".dest.select.filteredalts") 
                condition(
                    '$(if ("`SC4S_DEST_VMWARE_VSPHERE_FILTERED_ALTERNATES`" ne "") "yes" "no")' ne "no"               
                ) 
            );      
        };

        parser {p_add_context_splunk(key("${fields.sc4s_vendor_product}")); };
        parser (compliance_meta_by_source);
        rewrite { set("$(template ${.splunk.sc4s_template})" value("MSG")); };

   };
};
application vmware_nsx[syslog] {
	filter { 
        program("NSX", type(string), flags(ignore-case))
        or program("NSXV", type(string), flags(ignore-case))
        or program("dfwpktlogs", type(string), flags(ignore-case))
        or program("nsx-*", type(string), flags(ignore-case,prefix));
    };	
    parser { vmware_nsx-parser(); };   
};

