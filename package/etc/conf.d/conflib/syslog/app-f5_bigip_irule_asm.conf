block parser f5_bigip-irule-asm-parser() {    
 channel {
        rewrite {
            set("netwaf", value(".splunk.index"));
            set("f5_bigip_asm", value("fields.sc4s_syslog_format"));
            set("f5_bigip_asm", value("fields.sc4s_vendor_product"));
            set("f5:bigip:asm:syslog", value(".splunk.sourcetype"));
            #set-tag("log_path_known");
            #set-tag("f5_bigip_asm");   
            #set-tag("f5_bigip");      
            
        };       
        rewrite { 
            set("yes", 
                value(".dest.global.hec") 
                condition(
                    '$(if ("`SC4S_DEST_SPLUNK_HEC_GLOBAL`" ne "") "`SC4S_DEST_SPLUNK_HEC_GLOBAL`" "yes")' ne "no"
                )
            );            
            set("yes", 
                value(".dest.global.archive") 
                condition(
                    '$(if ("`SC4S_ARCHIVE_GLOBAL`" ne "") "`SC4S_ARCHIVE_GLOBAL`" "no")' ne "no"
                ) 
            );
            set("yes", 
                value(".dest.global.alts") 
                condition(
                    '$(if ("`SC4S_DEST_GLOBAL_ALTERNATES`" ne "") "yes" "no")' ne "no"
                ) 
            );
            set("`SC4S_DEST_F5_BIGIP_ALTERNATES`", 
                value(".dest.select.alts") 
                condition(
                    '$(if ("`SC4S_DEST_F5_BIGIP_ALTERNATES`" ne "") "yes" "no")' ne "no"
                ) 
            );
            set("`SC4S_DEST_F5_BIGIP_FILTERED_ALTERNATES`", 
                value(".dest.select.filteredalts") 
                condition(
                    '$(if ("`SC4S_DEST_F5_BIGIP_FILTERED_ALTERNATES`" ne "") "yes" "no")' ne "no"               
                ) 
            );      
        };
     
        parser {p_add_context_splunk(key("${fields.sc4s_vendor_product}")); };
        parser (compliance_meta_by_source);
   };
};
application f5_bigip-irule-asm-parser[syslog] {
	filter { 
        program('ASM' type(string) flags(prefix))
        or message('^f5_asm=Splunk-F5-ASM')
        ;
    };	
    parser { f5_bigip-irule-asm-parser(); };   
};

