block parser app-syslog-arista_eos() {
    channel {
        #
        parser {
            regexp-parser(
                prefix(".tmp.")
                patterns('^(?: ?(?<seq>\d+): )?(?<message>%[A-Z]+-\d+-[^: ]+: .*)')
                flags(ignore-case)
            );
        };
        rewrite {
            r_set_splunk_dest_default(
                index('netops')
                sourcetype('arista:eos')
                source('arista:eos:$(lowercase ${PROGRAM})')
                vendor("arista")
                product("eos")
                class('$(lowercase ${.tmp.program})')
            );
        };
        rewrite {
            set('${.tmp.seq}' value('fields.seq') condition("${.tmp.seq}" ne ""));
            set('${.tmp.message}' value('MESSAGE') condition("${.tmp.seq}" ne ""));
        };
    };
};

application app-syslog-arista_eos[sc4s-syslog] {
	filter {
        program('^[A-Z]\S+$')
        and message('%' type(string) flags(prefix));
    };	

    parser { app-syslog-arista_eos(); };
};
