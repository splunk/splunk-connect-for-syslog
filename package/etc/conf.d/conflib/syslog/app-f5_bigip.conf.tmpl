block parser f5_bigip-parser() {    
 channel {
        rewrite {
            set("f5_bigip", value("fields.sc4s_vendor_product"));        
            set("netops", value(".splunk.index"));
            set("program:${PROGRAM}", value(".splunk.source"));
            set("f5:bigip:syslog", value(".splunk.sourcetype"));
            set("t_hdr_msg", value(".splunk.sc4s_template"));
            #set-tag("log_path_known");
            #set-tag("f5_bigip");      
            
        };       

        if {
            filter{ 
                not (program('iControlPortal.cgi' type(string) flags(prefix))
                or program('tmsh' type(string) flags(prefix))
                or program('mcpd' type(string) flags(prefix))
                or program('mprov' type(string) flags(prefix))
                or program('apmd' type(string) flags(prefix))
                or program('tmm' type(string) flags(prefix))
                or program('sshd\(pam_audit\)')
                or message('pam_radius_auth|authenticated|pam_bigip_authz|mod_auth_pam')
                );
            };
            rewrite {
                set("f5_bigip_nix", value("fields.sc4s_vendor_product"));
                set("nix:syslog", value(".splunk.sourcetype"));
            };
        };

        parser {p_add_context_splunk(key("${fields.sc4s_vendor_product}")); };
        parser (compliance_meta_by_source);
        rewrite { set("$(template ${.splunk.sc4s_template} $(template t_JSON_5424))" value("MSG")); };

   };
};
application f5_bigip[syslog] {
	filter { 
        "${fields.sc4s_syslog_format}" eq "f5_bigip"              
        or (    
            (
                program('iControlPortal.cgi' type(string) flags(prefix))
                or program('tmsh' type(string) flags(prefix))
                or program('mcpd' type(string) flags(prefix))
                or program('mprov' type(string) flags(prefix))
                or program('apmd' type(string) flags(prefix))
                or program('tmm' type(string) flags(prefix))
                or (program('F5' type(string) flags(prefix)) and not match('access_json' value('MSGID')))
            )
            and not match('^\[F5@12276' value("SDATA"))
        )
        ;
    };	
    parser { f5_bigip-parser(); };   
};

filter f_soup_is_f5_bigip {
    "${fields.sc4s_vendor_product}" eq "f5_bigip";
    or "${fields.sc4s_vendor_product}" eq "f5_bigip_nix";
};