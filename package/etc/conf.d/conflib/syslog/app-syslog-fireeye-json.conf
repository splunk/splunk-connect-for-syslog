block parser app-syslog-fireeye-json() {    
    channel {
        # parser { 
        #     regexp-parser(
        #         prefix(".tmp.")
        #         patterns('^fe[a-z]+-\d+\.[a-z]+: (?<message>{.*}) *$')
        #     );
        # };
        rewrite {
            #set("${.tmp.message}", value("MESSAGE"));
            set("fe_json", value("fields.sc4s_syslog_format"));
        };                       
        parser {
            json-parser(
                prefix('.values.')
            );
        };
        rewrite {
            r_set_splunk_dest_default(
                index('fireeye')
                sourcetype('fe_json')
                vendor("fireeye")
                product('${.values.product}')
                template('t_msg_only')
                
            );              
            set("hx_json", value(".splunk.sourcetype") condition( "${.values.product}" eq "HX" ));
            set("${.values.alert.host.hostname}", value("HOST") condition( "${.values.alert.host.hostname}" ne ""));                  
        };       
        if {
            filter { "${.values.alert.event_values.processEvent/timestamp}" ne "" };
            parser { 
                date-parser-nofilter(format('%Y-%m-%dT%H:%M:%S.%f%z')
                template("${.values.alert.event_values.processEvent/timestamp}"));
            };
        } elif {
            filter { "${.values.alert.event_at}" ne "" };
            parser { 
                date-parser-nofilter(format('${.values.alert.event_at}')
                template("${.values.alert.event_values.processEvent/timestamp}"));
            };
        } else {};
        
        rewrite {
            groupunset(values('.tmp.*'));
        };
        
   };
};
application app-syslog-fireeye-json[sc4s-syslog] {

    parser { app-syslog-fireeye-json(); };   
};
