block parser f5_bigip_irule_splunk-parser() {    
 channel {
        filter { 
            message('^([^,]+),f5_irule=(Splunk-[^,]+)', flags(store-matches))
            ;
        };        
        rewrite {
            r_set_splunk_dest_default(
                index('netops')
                source('f5:hsl')
                sourcetype('f5:bigip:irule')
                vendor_product("f5_bigip_irule")
                dest_key("F5_BIGIP")
            );              
            set("$1", value("HOST"));
            set("$2", value(".f5.irule"));
            set("f5_bigip_irule", value("fields.sc4s_syslog_format"));

        };
        rewrite {    
            r_set_splunk_dest_update(
                 sourcetype('f5:bigip:gtm:dns:request:irule') condition("${.f5.irule}" eq "Splunk-iRule-DNS_REQUEST")
            );
        };
        rewrite {    
            r_set_splunk_dest_update(
                 sourcetype('f5:bigip:gtm:dns:response:irule') condition("${.f5.irule}" eq "Splunk-iRule-DNS_RESPONSE")
            );
        };
        rewrite {    
            r_set_splunk_dest_update(
                 sourcetype('f5:bigip:ltm:http:irule') condition("${.f5.irule}" eq "Splunk-iRule-HTTP")
            );
        };
        rewrite {    
            r_set_splunk_dest_update(
                 sourcetype('f5:bigip:ltm:failed:irule') condition("${.f5.irule}" eq "Splunk-iRule-LB_FAILED")
            );
        };
        
  
   };
};
application f5_bigip_irule_splunk[sc4s-syslog] {
    parser { f5_bigip_irule_splunk-parser(); };   
};


