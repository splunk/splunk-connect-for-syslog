block parser app-syslog-beyondtrust_sra() {
 channel {
        rewrite {
            r_set_splunk_dest_default(
                index('infraops')
                sourcetype('beyondtrust:sra')
                vendor("beyondtrust")
                product("sra")
                template('t_msg_only')
            );
            set("full" value(".structured.level"));
            set("json" value(".structured.splunk_hec"));
            set("sdata" value(".structured.syslog"));
        };
        parser {
            regexp-parser(
                prefix(".tmp.")
                patterns('^(?<siteid>\d+):(?<seq>\d+):(?<num>\d+):(?<message>.*)')
            );
            kv-parser(
                prefix(".values.")
                pair-separator(";")
                template('${.tmp.message}')
            );
        };
        rewrite {
            set('${.tmp.siteid}' value('.values.siteid'));
            set('${.tmp.seq}' value('.values.seq'));
            set('${.tmp.num}' value('.values.num'));
            set('${.tmp.message}' value('.message'));
            groupunset(values(".tmp.*"));
        };
   };
};
application app-syslog-beyondtrust_sra[sc4s-syslog] {
	filter {
        "${PROGRAM}" eq "BG"
    };
    parser { app-syslog-beyondtrust_sra(); };
};



#Destination type formatters
block parser app-syslog-beyondtrust_sra-splunk_hec() {
    channel {
        rewrite{
            set("t_json_values", value(".splunk.sc4s_template"));
        };
    };
};
application app-syslog-beyondtrust_sra-splunk_hec[sc4s-lp-dest-format-hec_fmt] {
    filter {
        "${fields.sc4s_vendor}" eq "beyondtrust"
        and "${fields.sc4s_product}" eq "sra"
        and (
            "`SC4S_DEST_BEYONDTRUST_SRA_SPLUNK_HEC_FMT`" eq ""
            or "`SC4S_DEST_BEYONDTRUST_SRA_SPLUNK_HEC_FMT`" eq "JSON"
        )
    };
    parser { app-syslog-beyondtrust_sra-splunk_hec(); };
};

block parser app-syslog-beyondtrust_sra-syslog() {
    channel {
        parser {
            map-value-pairs(
                key('.values.*' rekey(shift-levels(2) add-prefix(".SDATA.sc4sfields@27389.")))
            );
            map-value-pairs(
                key('fields.*' rekey(shift-levels(2) add-prefix(".SDATA.sc4smeta@27389.")))
            );
        };
        rewrite{
            unset(value('MESSAGE'));
        };
    };
};
application app-syslog-beyondtrust_sra-syslog[sc4s-lp-dest-format-syslog] {
    filter {
        "${fields.sc4s_vendor}" eq "beyondtrust"
        and "${fields.sc4s_product}" eq "sra"
        and (
            "`SC4S_DEST_BEYONDTRUST_SRA_SYSLOG_FMT`" eq ""
            or "`SC4S_DEST_BEYONDTRUST_SRA_SYSLOG_FMT`" eq "SDATA"
        )
    };
    parser { app-syslog-beyondtrust_sra-syslog(); };
};

block parser app-syslog-beyondtrust_sra-bsd() {
    channel {
        rewrite{
            set('$(template ${.splunk.sc4s_template:-t_hdr_msg})' value('MESSAGE'));
        };
    };
};
application app-syslog-beyondtrust_sra-bsd[sc4s-lp-dest-format-bsd] {
    parser { app-syslog-beyondtrust_sra-bsd(); };
};
