
python {
import syslogng
import json

def splunk_hec_metric_single(log_message):
        logger = syslogng.Logger()
        logger.debug(log_message)
        
        mb = {}
        mb['time']=log_message['S_UNIXTIME'].decode("utf-8")
        mb['host']=log_message['HOST'].decode("utf-8").lower()
        mb['source']=log_message['.splunk.source'].decode("utf-8")
        mb['sourcetype']=log_message['.splunk.sourcetype'].decode("utf-8")
        mb['index']=log_message['.splunk.index'].decode("utf-8")
        mb['index']='em_metrics'
        mb['fields']={}
        for field in log_message.keys():
            dfield = field.decode("utf-8")
            if dfield.startswith('fields.'):
                    sfield=dfield.lstrip('fields.')
                    mb['fields'][sfield]=log_message[field].decode("utf-8")

        
        ms=[]       

        rawmetrics = log_message['MESSAGE'].decode("utf-8").rstrip(", ").split(", ")

        for rm in rawmetrics:
                        
                metric, locator = rm.split("=", 1)
                if metric != "not_matched":
                        m = mb.copy()
                
                        locator, value = locator.strip("'").split("=")
                        t, instance = locator.split("(", 1)
                        instance = (
                                instance.rstrip(")")
                                .replace("(", "_")
                                .replace("/services/collector/event", "")
                                .replace(".", "_")
                                .replace(",", ".")
                                .replace(":", "_")
                                .replace("//", "_")
                                .replace("/", "_")
                                .replace("-", "_")
                                .replace("#", "")
                        )

                        result = f"{t}.{instance}.{metric.replace('.', '_')}={value}"
                        m['fields']["metric_name"]=f"spl.sc4syslog.{t}.{instance}.{metric.replace('.', '_')}"
                        m['fields']["_value"] = value
                        ms.append(m)
        
        message = json.dumps(ms)
        logger.debug(message)
        return message 
};

template t_splunk_hec_metric_single {
    template('$(python splunk_hec_metric_single)');
};