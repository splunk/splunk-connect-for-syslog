# ===============================================================================================
# Templates for message formatting.  Overall JSON formatting for HEC/Kafka is handled in the
# destination blocks.
# ===============================================================================================

# ===============================================================================================
# Standard format; works for nearly all messages
# ===============================================================================================

template t_standard {
        template("${DATE} ${HOST} ${MSGHDR}${MESSAGE}");
        };

# ===============================================================================================
# Message Only; useful for bluecoat proxy, palo alto, and others
# ===============================================================================================

template t_msg_only {
        template("${MSGONLY}");
        };

# ===============================================================================================
# Message Only trim leading or trailing white space
# ===============================================================================================

template t_msg_trim {
        template("$(strip $MSGONLY )");
        };
# ===============================================================================================
# Everything; useful for bluecoat proxy and others
# ===============================================================================================

template t_everything {
        template("${ISODATE} ${HOST} ${LEGACY_MSGHDR}${MESSAGE}");
        };

# ===============================================================================================
# Message Header with Message; for Palo Alto
# ===============================================================================================

template t_hdr_msg {
        template("${MSGHDR}${MESSAGE}");
        };

template t_legacy_hdr_msg {
        template("${LEGACY_MSGHDR}${MESSAGE}");
        };

template t_program_msg {
        template("${PROGRAM}[${PID}]: ${MESSAGE}");
        };

template t_program_nopid_msg {
        template("${PROGRAM}: ${MESSAGE}");
        };

# ===============================================================================================
# Message Header, Structured Data (from RFC5424 parse) and Message; for Juniper
# ===============================================================================================

template t_hdr_sdata_msg {
        template("${MSGHDR}${MSGID} ${SDATA} ${MESSAGE}");
        };

# ===============================================================================================
# JSON_3164; for JSON pretty-printing (for debugging)
# ===============================================================================================

template t_JSON_3164 {
    template('$(format-json --scope rfc3164
                --pair PRI="<$PRI>"
                --key LEGACY_MSGHDR
                --key RAWMSG
                --exclude FACILITY
                --exclude PRIORITY
                )');
    };

# ===============================================================================================
# JSON_5424; for JSON pretty-printing (standard output for RFC5424 messages in production)
# Fields passed as indexed fields or as Splunk metadata are excluded
# ===============================================================================================

template t_JSON_5424 {
    template('$(format-json --scope rfc5424
                --key RAWMSG
                --exclude DATE
                --exclude FACILITY
                --exclude PRIORITY
                --exclude HOST
                )');
    };

# ===============================================================================================
# JSON_5424_ALL; for JSON pretty-printing (for printing all fields in RFC5424 message and ISO date)
# Useful for log path development
# ===============================================================================================

template t_JSON_5424_ALL {
    template('$(format-json --scope rfc5424
                --exclude DATE
                --key ISODATE
                --key RAWMSG
                )');
    };

# ===============================================================================================
# JSON_5424_SDATA; for JSON pretty-printing (for RFC5424 messages with duplicate data in MESSAGE)
# ===============================================================================================

template t_JSON_5424_SDATA {
    template('$(format-json --scope rfc5424
                --exclude DATE
                --exclude HOST
                --exclude FACILITY
                --exclude PRIORITY
                --exclude MESSAGE
                --exclude RAWMSG
                )');
    };


template t_snmp_trap {
    template('$(format-json .snmp.* --rekey .snmp.* --shift-levels 2)');
    };
