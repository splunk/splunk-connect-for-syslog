template t_blue {
        template("${ISODATE},${MESSAGE}");
        };


log {
    source(s_default-ports);

    filter {
#        tags("bluecoat")
#            or "{$PROGRAM}" ==
#           or program('*bluecoat*')
            message('^(?=.*?\bc-ip\b)(?=.*?\bcs-bytes\b)(?=.*?\bcs_categories\b)' )
           or message('bluecoat')
           or message('OBSERVED')
        ;};

#    c-ip= or c-anything to match KV

#to match syslog match OBSERVED or dns_unresolved and negative of KV

     if (message('^(?=.*?\bc-ip\b)(?=.*?\bcs-bytes\b)(?=.*?\bcs-categories\b)(<\d*>)((?!avoid|date=").)*$')) {
            parser {p_add_context_splunk(key("bluecoat:proxysg:access:kv")); };
            rewrite {r_set_splunk_basic(template("t_blue")); }; #--HEC--

    } elif (message('^(<\d*>)(?=.*?\bOBSERVED\b | \bALLOWED\b | \bDENIED\b |\bPROXIED\b |\bFAILED\b )((?!c-ip |cs-bytes|date="[12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])").)*$')) {
        parser {p_add_context_splunk(key("bluecoat:proxysg:access:syslog")); };
        rewrite {r_set_splunk_basic(template("t_blue")); };

    } elif (message('^([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))(\s*)(\d{2}:\d{2}:\d{2})(\s*)(\d*)(\s*)(\b(?:\d{1,3}\.){3}\d{1,3}\b)((?!c-ip|cs-bytes|date="[12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])").)*$')) {
        parser {p_add_context_splunk(key("bluecoat:proxysg:access:syslog")); };
        rewrite {r_set_splunk_basic(template("t_blue")); };

    } elif (message('^(?=.*?\bdate="\b)(?=.*?\bcs-bytes\b)(?=.*?\bcs-categories\b)((?!(<\d{1,3}>)).)*$')) {
        parser {p_add_context_splunk(key("bluecoat:proxysg:access:file")); };
        rewrite {r_set_splunk_basic(template("t_blue")); };

    }else{
        parser {p_add_context_splunk(key("bluecoat:proxysg:access:unknown")); };
        rewrite {r_set_splunk_basic(template("t_blue")); };

    };

    destination(d_hec);  #--HEC--

    flags(final);
 };