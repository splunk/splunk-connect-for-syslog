

log {
    source(s_default-ports);

    filter { message(',\d+,(THREAT|TRAFFIC|SYSTEM|CONFIG|HIPWATCH|CORRELATION|USERID),')
        ;};

    parser {
        syslog-parser(time-zone(`default-timezone`));
    };



    if (message('\d+,\d+,THREAT,\w+')) {
        parser {p_add_context_splunk(sourcetype("pan:threat")); };
    } elif (message('\d+,\d+,TRAFFIC,\w+')) {
        parser {p_add_context_splunk(sourcetype("pan:traffic")); };
    } elif (message('\d+,\d+,SYSTEM,\w+')) {
        parser {p_add_context_splunk(sourcetype("pan:system")); };
    } elif (message('\d+,\d+,CONFIG,\w+')) {
        parser {p_add_context_splunk(sourcetype("pan:config")); };
    } elif (message('\d+,\d+,HIPWATCH,\w+')) {
        parser {p_add_context_splunk(sourcetype("pan:hipwatch")); };
    } elif (message('\d+,\d+,CORRELATION,\w+')) {
        parser {p_add_context_splunk(sourcetype("pan:correlation")); };
    } elif (message('\d+,\d+,USERID,\w+')) {
        parser {p_add_context_splunk(sourcetype("pan:userid")); };
    } else {
        parser {p_add_context_splunk(sourcetype("pan:log")); };
    };

    rewrite {
        r_set_splunk(sourcetype(${.context.sourcetype}) index(${.context.index}) template("t_hdr_msg")) }; #--HEC--

    destination(d_hec);  #--HEC--

    flags(final);
};
