
# Cisco APIC
{{- /* The following provides a unique port source configuration if env var(s) are set */}}
{{- $context := dict "port_id" "CISCO_APIC" "parser" "rfc3164" }}
{{- tmpl.Exec "t/source_network.t" $context }}
# Cisco IOS
{{- /* The following provides a unique port source configuration if env var(s) are set */}}
{{- $context := dict "port_id" "CISCO_IOS" "parser" "cisco_parser" }}
{{- tmpl.Exec "t/source_network.t" $context }}
# Cisco NX_OS
{{- /* The following provides a unique port source configuration if env var(s) are set */}}
{{- $context := dict "port_id" "CISCO_NX_OS" "parser" "rfc3164" }}
{{- tmpl.Exec "t/source_network.t" $context }}

# General Cisco Syslog and IOS


log {
    junction {

{{- if or (or (getenv  (print "SC4S_LISTEN_CISCO_APIC_TCP_PORT")) (getenv  (print "SC4S_LISTEN_CISCO_APIC_UDP_PORT"))) (getenv  (print "SC4S_LISTEN_CISCO_APIC_TLS_PORT")) }}
        channel {
        # Listen on the specified dedicated port(s) for CISCO_APIC traffic
            source (s_CISCO_APIC);
            flags (final);
	    };
{{- end}}        
{{- if or (or (getenv  (print "SC4S_LISTEN_CISCO_IOS_TCP_PORT")) (getenv  (print "SC4S_LISTEN_CISCO_IOS_UDP_PORT"))) (getenv  (print "SC4S_LISTEN_CISCO_IOS_TLS_PORT")) }}
        channel {
        # Listen on the specified dedicated port(s) for CISCO_IOS traffic
            source (s_CISCO_IOS);
            flags (final);
	    };
{{- end}}
{{- if or (or (getenv  (print "SC4S_LISTEN_CISCO_NX_OS_TCP_PORT")) (getenv  (print "SC4S_LISTEN_CISCO_NX_OS_UDP_PORT"))) (getenv  (print "SC4S_LISTEN_CISCO_NX_OS_TLS_PORT")) }}
        channel {
        # Listen on the specified dedicated port(s) for CISCO_NX_OS traffic
            source (s_CISCO_NX_OS);
            flags (final);
	    };
{{- end}}
{{- if or (or (getenv  (print "SC4S_LISTEN_CISCO_UCM_TCP_PORT")) (getenv  (print "SC4S_LISTEN_CISCO_UCM_UDP_PORT"))) (getenv  (print "SC4S_LISTEN_CISCO_UCM_TLS_PORT")) }}
        channel {
        # Listen on the specified dedicated port(s) for CISCO_UCM traffic
            source (s_CISCO_UCM);
            flags (final);
	    };
{{- end}}
        channel {
        # Listen on the default port (typically 514) for CISCO_IOS traffic
            source (s_DEFAULT);
            filter(f_soup_is_cisco_syslog);
            flags(final);
        };
    };
       
    {{- if (print (getenv "SC4S_DEST_CISCO_IOS_ALT_FILTER")) }}

    # HEC destination is *not* included by default for filtered destinations

        if (filter({{ print (getenv "SC4S_DEST_CISCO_IOS_ALT_FILTER") }})) {
    {{- if (print (getenv "SC4S_DEST_CISCO_IOS_FILTERED_ALTERNATES")) }}
            {{ getenv "SC4S_DEST_CISCO_IOS_FILTERED_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n            destination(" }});
    {{- end }}
        }
        else {
    {{- end }}

    {{- if or (conv.ToBool (getenv "SC4S_DEST_SPLUNK_HEC_GLOBAL" "yes")) (conv.ToBool (getenv "SC4S_DEST_CISCO_IOS_HEC" "no")) }}
        destination(d_hec);
    {{- end}}

    {{- if or (conv.ToBool (getenv "SC4S_ARCHIVE_GLOBAL" "no")) (conv.ToBool (getenv "SC4S_ARCHIVE_CISCO_IOS" "no")) }}
        destination(d_archive);
    {{- end}}

    {{- if (print (getenv "SC4S_DEST_GLOBAL_ALTERNATES")) }}
        {{ getenv "SC4S_DEST_GLOBAL_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n    destination(" }});
    {{- end }}

    {{- if (print (getenv "SC4S_DEST_CISCO_IOS_ALTERNATES")) }}
        {{ getenv "SC4S_DEST_CISCO_IOS_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n    destination(" }});
    {{- end }}

    {{- if (print (getenv "SC4S_DEST_CISCO_IOS_ALT_FILTER")) }}
        };
    {{- end }}

    flags(flow-control,final);
};
