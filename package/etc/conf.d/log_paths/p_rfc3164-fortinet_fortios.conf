log {
    source(s_default-ports);
    filter(f_is_rfc3164);
    filter(f_fortinet_fortios);

    parser {
        kv-parser(prefix(".kv.") template("${MSGHDR} ${MSG}"));
        date-parser(format("%Y-%m-%d:%H:%M:%S") template("${.kv.date}:${.kv.time}") time-zone(`default-timezone`));
    };

    rewrite { set("${.kv.devname}", value("HOST")); };

    #set the source type based on program field and lookup index from the splunk context csv


    if (match("traffic" value(".kv.type"))) {
       rewrite { r_set_splunk_dest_default(sourcetype("fgt_traffic"), index("netfw"), template("t_standard"))};
       parser {p_add_context_splunk(key("fortinet_fortios_traffic")); };
    } elif (match("utm" value(".kv.type"))) {
       rewrite { r_set_splunk_dest_default(sourcetype("fgt_utm"), index("netids"), template("t_standard"))};
       parser {p_add_context_splunk(key("fortinet_fortios_utm")); };
    } elif (match("event" value(".kv.type"))) {
       rewrite { r_set_splunk_dest_default(sourcetype("fgt_event"), index("netops"), template("t_standard"))};
       parser {p_add_context_splunk(key("fortinet_fortios_event")); };
    } else {
       rewrite { r_set_splunk_dest_default(sourcetype("fgt_log"), index("netops"), template("t_standard"))};
       parser {p_add_context_splunk(key("fortinet_fortios_log")); };
    };

    destination(d_hec);  #--HEC--

    flags(flow-control);
};

