{{- define "log_path"}}
log {
    source(s_internal);

    if (match("^Log statistics; " value("MESSAGE"))) {

        rewrite { r_set_splunk_dest_default(sourcetype("sc4s:metrics"), index("em_metrics")) };

        parser {p_add_context_splunk(key("sc4s_metrics")); };
        rewrite {
            subst('(?:Log statistics; )?(?<Type>[^= ]+)=\x27(?<SourceName>[^\(]+)\((?<SourceId>[^,\)]+)(?:,(?<SourceInstance>[^,]+),(?<State>[^\)]+))?\)\=(?<Number>\d+)\x27(?:, )?',
                    '
                    {"time": "$S_UNIXTIME.$S_MSEC",
                      "event": "metric",
                      "host": "$HOST",
                      "index": "${.splunk.index}",
                      "source": "internal",
                      "sourcetype": "${.splunk.sourcetype}",
                      "fields": {
                         "source_name": "${SourceName}",
                         "source_instance": "${SourceInstance}",
                         "state": "${State}",
                         "type": "${Type}",
                         "_value": ${Number},
                         "metric_name": "syslogng.${SourceId}"
                       }
                     }
                     ',
                     value("MESSAGE") flags("utf8" "global")
                  );
        };
        destination(d_hecmetrics);  #--HEC--
    } else {


        {{- if eq (getenv "SC4S_DEBUG_STDOUT" "yes") "yes"}}
        destination(d_stdout);
        {{- end}}
        rewrite { r_set_splunk_dest_default(sourcetype("sc4s:events"), index("main"), template("t_msg_only"))};
        parser {p_add_context_splunk(key("sc4s_events")); };
        destination(d_hec_internal);
    };
 };
{{- end}}
{{- tmpl.Exec "log_path" "yes" }}
