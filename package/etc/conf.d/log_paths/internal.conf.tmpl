{{- define "log_path"}}
log {
    source(s_internal);

    if (match("^Log statistics; " value("MESSAGE"))) {

        rewrite { r_set_splunk_dest_default(sourcetype("sc4s:metrics"), index("em_metrics")) };

        parser {p_add_context_splunk(key("sc4s_metrics")); };
        rewrite {
            subst('Log statistics; ', '', value("MESSAGE"), flags("utf8" "global"));
            subst('([^= ]+=\x27[^\(]+\(#anon[^,\)]+(?:,[^,]+,[^\)]+)?\)\=\d+\x27(?:, )?)', '', value("MESSAGE"), flags("utf8" "global"));
            subst('(?<Type>[^= ]+)=\x27(?<SourceName>[^\(]+)\((?<SourceId>[^,\)]+)(?:,(?<SourceInstance>[^,]+),(?<State>[^\)]+))?\)\=(?<Number>\d+)\x27,? ?',
'{"time": "$S_UNIXTIME.$S_MSEC","event": "metric","host": "$HOST","index": "${.splunk.index}","source": "internal","sourcetype": "${.splunk.sourcetype}","fields": {"source_name": "${SourceName}","source_instance": "${SourceInstance}","state": "${State}","type": "${Type}","_value": ${Number},"metric_name": "syslogng.${SourceId}"}}
',
                     value("MESSAGE") flags("utf8" "global")
            );
        };

        {{- if ((getenv "SC4S_DEST_SPLUNK_HEC_GLOBAL" "yes") | conv.ToBool) or (conv.ToBool (getenv "SC4S_DEST_INTERNAL_METRICS_HEC" "no") | conv.ToBool) }}
        destination(d_hecmetrics);
        {{- end}}

    } else {

        {{- if eq (getenv "SC4S_DEBUG_STDOUT" "yes") "yes"}}
        destination(d_stdout);
        {{- end}}
        rewrite { r_set_splunk_dest_default(sourcetype("sc4s:events"), index("main"))};
        parser {p_add_context_splunk(key("sc4s_events")); };

        {{- if ((getenv "SC4S_DEST_SPLUNK_HEC_GLOBAL" "yes") | conv.ToBool) or (conv.ToBool (getenv "SC4S_DEST_INTERNAL_EVENTS_HEC" "no") | conv.ToBool) }}
        destination(d_hec_internal);
        {{- end}}

    };
 };
{{- end}}
{{- tmpl.Exec "log_path" "yes" }}
