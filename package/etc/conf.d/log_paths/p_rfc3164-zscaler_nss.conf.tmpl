# Proofpoint
{{- if (ne (getenv (print "SC4S_LISTEN_ZSCALER_NSS_TCP_PORT") "no") "no") or (ne (getenv (print "SC4S_LISTEN_ZSCALER_NSS_UDP_PORT") "no") "no") or (ne (getenv (print "SC4S_LISTEN_ZSCALER_NSS_TLS_PORT") "no") "no") }}
{{ $context := dict "port_id" "ZSCALER_NSS" "parser" "common" }}
{{ tmpl.Exec "t/source_network.t" $context }}
{{- end -}}
{{ define "log_path" }}
log {
{{- if eq (.) "yes" }}
    source(s_default-ports);
    filter(f_zscaler_nss);
{{- end }}
{{- if eq (.) "no" }}
    source (s_dedicated_port_ZSCALER_NSS);
{{- end }}

    rewrite {
        subst("^[^\t]+\t", "", value("MESSAGE"), flags("global"));
    };
    parser {
        #basic parsing
        kv-parser(prefix(".kv.") pair-separator("\t") template("${MSG}"));
    };

    if (match("alerts" value(".kv.product"))) {
       rewrite { r_set_splunk_dest_default(sourcetype("zscalernss-alerts"), index("main"), template("t_msg_only"))};
       parser { p_add_context_splunk(key("zscaler_alerts")); };
    } elif (match("dns" value(".kv.product"))) {
       rewrite { r_set_splunk_dest_default(sourcetype("zscalernss-dns"), index("netdns"), template("t_msg_only"))};
       parser { p_add_context_splunk(key("zscaler_dns")); };
    } elif (match("fw" value(".kv.product"))) {
       rewrite { r_set_splunk_dest_default(sourcetype("zscalernss-fw"), index("netfw"), template("t_msg_only"))};
       parser { p_add_context_splunk(key("zscaler_fw")); };
    } elif (match("NSS" value(".kv.product"))) {
       rewrite { r_set_splunk_dest_default(sourcetype("zscalernss-web"), index("netproxy"), template("t_msg_only"))};
       parser { p_add_context_splunk(key("zscaler_web")); };
    } elif (match("audit" value(".kv.product"))) {
       rewrite { r_set_splunk_dest_default(sourcetype("zscalernss-zia-audit"), index("netops"), template("t_msg_only"))};
       parser { p_add_context_splunk(key("zscaler_zia_audit")); };
    } elif (match("sandbox" value(".kv.product"))) {
       rewrite { r_set_splunk_dest_default(sourcetype("zscalernss-zia-sandbox"), index("main"), template("t_msg_only"))};
       parser { p_add_context_splunk(key("zscaler_zia_sandbox")); };
    } elif (match("zpa" value(".kv.product"))) {
       rewrite { r_set_splunk_dest_default(sourcetype("zscalernss-zpa-app"), index("netids"), template("t_msg_only"))};
       parser { p_add_context_splunk(key("zscaler_zpa")); };
    } elif (match("zpa_auth" value(".kv.product"))) {
       rewrite { r_set_splunk_dest_default(sourcetype("zscalernss-zpaauth"), index("netauth"), template("t_msg_only"))};
       parser { p_add_context_splunk(key("zscaler_zpa_auth")); };
    } elif (match("zpa_auth_connector" value(".kv.product"))) {
       rewrite { r_set_splunk_dest_default(sourcetype("zscalernss-zpa-connector"), index("netops"), template("t_msg_only"))};
       parser { p_add_context_splunk(key("zscaler_zpa_connector")); };
    } elif (match("zpa_bba" value(".kv.product"))) {
       rewrite { r_set_splunk_dest_default(sourcetype("zscalernss-bba"), index("main"), template("t_msg_only"))};
       parser { p_add_context_splunk(key("zscaler_zpa_bba")); };
    } else {
        rewrite { r_set_splunk_dest_default(sourcetype("zscalernss-unknown"), index("main"), template("t_msg_only"))};
        parser {
            p_add_context_splunk(key("zscaler_nss"));
        };
    };


    parser (compliance_meta_by_source);

    destination(d_hec);  #--HEC--

    flags(flow-control);
};
{{- end}}
{{- if (ne (getenv (print "SC4S_LISTEN_ZSCALER_NSS_TCP_PORT") "no") "no") or (ne (getenv (print "SC4S_LISTEN_ZSCALER_NSS_UDP_PORT") "no") "no") or (ne (getenv (print "SC4S_LISTEN_ZSCALER_NSS_TLS_PORT") "no") "no") }}
# Listen on the specified dedicated port(s) for ZSCALER_NSS traffic
    {{ tmpl.Exec "log_path" "no" }}
{{- end}}

# Listen on the default port (typically 514) for ZSCALER_NSS traffic
{{ tmpl.Exec "log_path" "yes" }}
