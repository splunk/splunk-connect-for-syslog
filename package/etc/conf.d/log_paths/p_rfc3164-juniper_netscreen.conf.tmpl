# Juniper Netscreen
{{- if (ne (getenv (print "SC4S_LISTEN_JUNIPER_NETSCREEN_TCP_PORT") "no") "no") or (ne (getenv (print "SC4S_LISTEN_JUNIPER_NETSCREEN_UDP_PORT") "no") "no") or (ne (getenv (print "SC4S_LISTEN_JUNIPER_NETSCREEN_TLS_PORT") "no") "no") }}
{{ $context := dict "port_id" "JUNIPER_NETSCREEN" "parser" "common" }}
{{ tmpl.Exec "t/source_network.t" $context }}
{{- end -}}
{{ define "log_path" }}
log {
{{- if eq (.) "yes"}}
    source(s_default-ports);
    filter(f_juniper_netscreen);
{{- end}}
{{- if eq (.) "no"}}
    source (s_dedicated_port_JUNIPER_NETSCREEN);
{{- end}}

    rewrite {
        r_set_splunk_dest_default(sourcetype("netscreen:firewall"),
        index("netfw"),
        template("t_standard"))
    };

    parser {
            p_add_context_splunk(key("juniper_netscreen"));
    };

    destination(d_hec);  #--HEC--
    flags(flow-control);
};
{{- end}}
{{- if (ne (getenv (print "SC4S_LISTEN_JUNIPER_NETSCREEN_TCP_PORT") "no") "no") or (ne (getenv (print "SC4S_LISTEN_JUNIPER_NETSCREEN_UDP_PORT") "no") "no") or (ne (getenv (print "SC4S_LISTEN_JUNIPER_NETSCREEN_TLS_PORT") "no") "no") }}
# Listen on the specified dedicated port(s) for JUNIPER_NETSCREEN traffic
    {{ tmpl.Exec "log_path" "no" }}
{{- end}}

# Listen on the default port (typically 514) for JUNIPER_NETSCREEN traffic
{{ tmpl.Exec "log_path" "yes" }}
