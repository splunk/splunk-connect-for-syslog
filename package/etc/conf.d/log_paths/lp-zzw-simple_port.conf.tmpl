{{- range split (getenv "SOURCE_SIMPLE_SET" "") "," }}                                

{{- /* The following provides a unique port source configuration if env var(s) are set */}}
{{- $context := dict "port_id" (strings.ToUpper .) "parser" "common" }}

{{- tmpl.Exec "t/source_network.t" $context }}

log {
# Listen on the specified dedicated port(s) for {{ . }} traffic
source (s_{{ (strings.ToUpper .) }});

# Set a default sourcetype and index, as well as an appropriate value for the field
# "sc4s_vendor_product".  This field is sent as an indexed field to Splunk,
# and is useful for downstream analysis.

    rewrite {
        set("{{ . }}", value("fields.sc4s_vendor_product"));
        r_set_splunk_dest_default(sourcetype("sc4s:simple:{{ . }}"));
        subst("^[^\t]+\t", "", value("MESSAGE"), flags("global"));
        set("${PROGRAM}", value(".PROGRAM"));
        subst('^\/(?:[^\/]+\/)+', "" , value(".PROGRAM"));
    };

    parser { p_add_context_splunk(key("{{ . }}")); };
    parser (compliance_meta_by_source);
    if {
        filter(f_is_rfc5424_strict);
        rewrite { set("$(template ${.splunk.sc4s_template} $(template t_hdr_sdata_msg))" value("MSG")); };
    } else {
        rewrite { set("$(template ${.splunk.sc4s_template} $(template t_legacy_hdr_msg))" value("MSG")); };
    };    
    


{{- /* Check environment variables (and defaults if unset) for sending to the HEC */}}
{{- /* destination. When more destination options are offered in SC4S, this is where */}}
{{- /* output to them will be configured */}}

{{- if or (conv.ToBool (getenv "SC4S_DEST_SPLUNK_HEC_GLOBAL" "yes")) (conv.ToBool (getenv (print "SC4S_DEST_SIMPLE_" . "_HEC") "no")) }}
    destination(d_hec);
{{- end}}

{{- /* Check environment variables (and defaults if unset) for sending to the local EWMM-format */}}
{{- /* disk archive */}}

{{- if or (conv.ToBool (getenv "SC4S_ARCHIVE_GLOBAL" "no")) (conv.ToBool (getenv (print "SC4S_ARCHIVE_SIMPLE_" . "_HEC") "no")) }}
    destination(d_archive);
{{- end}}

{{- /* Check environment variables for sending to a global list of alternate destinations */}}

{{- if (print (getenv "SC4S_DEST_GLOBAL_ALTERNATES")) }}
    {{ getenv "SC4S_DEST_GLOBAL_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n    destination(" }});
{{- end }}

{{- /* Check environment variables for sending to a list of alternate destinations only for this specific source */}}

{{- if (print (getenv (print "SC4S_DEST_SIMPLE_" . "_ALTERNATES"))) }}
    {{ getenv (print "SC4S_DEST_SIMPLE_" . "_ALTERNATES") | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n    destination(" }});
{{- end }}

# All passes through any matching log path will be final
    flags(flow-control,final);
};
{{- end}}