# McAfee NSP

{{- /* The following provides a unique port source configuration if env var(s) are set */}}
{{- $context := dict "port_id" "McAfee_NSP" "parser" "rfc5424_noversion" }}
{{- tmpl.Exec "t/source_network.t" $context }}

filter f_mcafee_nsp{
      not tags("log_path_known") and
    (program("SyslogACLLogForwarder")
    or program("SyslogAlertForwarder")
    or program("SyslogFaultForwarder")
    or program("SyslogAuditLogForwarder")
    or match("mcafee_nsp", value("fields.sc4s_vendor_product") type(glob)));
};

log {
    junction {
        channel {
        # Listen on the specified dedicated port(s) for McAfee_NSP traffic
            source (s_McAfee_NSP);
            flags (final);
	      };
        channel {
        # Listen on the default port (typically 514) for McAfee_NSP traffic
            source (s_DEFAULT);
            filter(f_mcafee_nsp);
            flags(final);
        };
    };

    rewrite {
        set("mcafee_nsp", value("fields.sc4s_vendor_product"));
        r_set_splunk_dest_default(sourcetype("mcafee:nsp"))

    };

    parser {p_add_context_splunk(key("mcafee_nsp")); };
    parser (compliance_meta_by_source);
    rewrite { set("$(template ${.splunk.sc4s_template} $(template t_msg_only))" value("MSG")); };

{{- if (print (getenv "SC4S_DEST_MCAFEE_NSP_ALT_FILTER")) }}

# HEC destination is *not* included by default for filtered destinations

    if (filter({{ print (getenv "SC4S_DEST_MCAFEE_NSP_ALT_FILTER") }})) {
{{- if (print (getenv "SC4S_DEST_MCAFEE_NSP_FILTERED_ALTERNATES")) }}
        {{ getenv "SC4S_DEST_MCAFEE_NSP_FILTERED_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n        destination(" }});
{{- end }}
    }
    else {
{{- end }}

{{- if or (conv.ToBool (getenv "SC4S_DEST_SPLUNK_HEC_GLOBAL" "yes")) (conv.ToBool (getenv "SC4S_DEST_MCAFEE_NSP_HEC" "no")) }}
    destination(d_hec);
{{- end}}

{{- if or (conv.ToBool (getenv "SC4S_ARCHIVE_GLOBAL" "no")) (conv.ToBool (getenv "SC4S_ARCHIVE_MCAFEE_NSP" "no")) }}
    destination(d_archive);
{{- end}}

{{- if (print (getenv "SC4S_DEST_GLOBAL_ALTERNATES")) }}
    {{ getenv "SC4S_DEST_GLOBAL_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n    destination(" }});
{{- end }}

{{- if (print (getenv "SC4S_DEST_MCAFEE_NSP_ALTERNATES")) }}
    {{ getenv "SC4S_DEST_MCAFEE_NSP_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n    destination(" }});
{{- end }}

{{- if (print (getenv "SC4S_DEST_MCAFEE_NSP_ALT_FILTER")) }}
    };
{{- end }}

    flags(flow-control,final);
};
