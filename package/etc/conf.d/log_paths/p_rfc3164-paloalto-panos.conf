log {
    source(s_default-ports);
    filter(f_is_rfc3164);
    filter(f_paloalto_panos);

     # the palo message does not include a program value in the header unfortunatly
    # the use of colon in the message tricks the RFC3164 parser we will re-write the message
    # so the parser will not incorrectly break it apart.
    # while we are at it we will save the mesage type into the program field so parser can find it
    rewrite {
        set("${LEGACY_MSGHDR}${MESSAGE}" value("MESSAGE"));
        unset(value("LEGACY_MSGHDR"));
        unset(value("PROGRAM"));

    };
    parser {
        #basic parsing

        #we need to actual even time from the field GeneratedTime use csv parser to get it out
        csv-parser(
            columns('FUTURE_USE', 'ReceiveTime', 'SerialNumber', 'Type', 'Subtype', 'FUTURE_USE2', 'GeneratedTime')
            prefix(".pan.")
            delimiters(',')
            );
        #2012/04/10 04:39:55
        #parse the date
        date-parser(
                format("%Y/%m/%d %H:%M:%S")
                template("${.pan.GeneratedTime}")
                time-zone("Universal")
        );
    };

    #set the source type based on program field and lookup index from the splunk context csv
    if (message(',\d+,THREAT')) {
        parser {p_add_context_splunk(key("pan:threat")); };
    } elif (message(',\d+,TRAFFIC')) {
        parser {p_add_context_splunk(key("pan:traffic")); };
    } elif (message(',\d+,SYSTEM')) {
        parser {p_add_context_splunk(key("pan:system")); };
    } elif (message(',\d+,CONFIG')) {
        parser {p_add_context_splunk(key("pan:config")); };
    } elif (message(',\d+,HIPWATCH')) {
        parser {p_add_context_splunk(key("pan:hipwatch")); };
    } elif (message(',\d+,CORRELATION')) {
        parser {p_add_context_splunk(key("pan:correlation")); };
    } elif (message(',\d+,USERID')) {
        parser {p_add_context_splunk(key("pan:userid")); };
    } else {
        parser {p_add_context_splunk(key("pan:log")); };
    };

    #rewrite the final message for splunk json
    #sourcetype and index are set in the filter defaults won't be used
    rewrite {r_set_splunk(template("t_msg_only")) }; #--HEC--

    destination(d_hec);  #--HEC--

    flags(flow-control);
};