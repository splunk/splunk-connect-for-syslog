{{- /* The following provides a unique port source configuration if env var(s) are set */}}
{{- $context := dict "port_id" "PULSE_CONNECT_SECURE" "parser" "rfc5424" }}
{{- tmpl.Exec "t/source_network.t" $context }}

filter f_pulse_connect_secure {
    match("^pulse_connect_secure", value("fields.sc4s_vendor_product"))
    or
    program('PulseSecure:');

};

log {
    junction {
{{- if or (or (getenv  (print "SC4S_LISTEN_PULSE_CONNECT_SECURE_TCP_PORT")) (getenv  (print "SC4S_LISTEN_PULSE_CONNECT_SECURE_UDP_PORT"))) (getenv  (print "SC4S_LISTEN_PULSE_CONNECT_SECURE_TLS_PORT")) }}
        channel {
        # Listen on the specified dedicated port(s) for PULSE_CONNECT_SECURE traffic
            source (s_PULSE_CONNECT_SECURE);
            flags (final);
	    };
{{- end}}
        channel {
        # Listen on the default port (typically 514) for PULSE_CONNECT_SECURE traffic
            source (s_DEFAULT);
            filter(f_pulse_connect_secure);
            flags(final);
        };
    };

    if {
        filter{message('WebRequest|Access\sblocked')};
        rewrite {
            set("pulse_connect_secure", value("fields.sc4s_vendor_product"));
            r_set_splunk_dest_default(sourcetype("pulse:connectsecure:web"))
        };
        parser { p_add_context_splunk(key("pulse_connect_secure_web")); };
        parser (compliance_meta_by_source);
    } else {
        rewrite {
            set("pulse_connect_secure", value("fields.sc4s_vendor_product"));
            r_set_splunk_dest_default(sourcetype("pulse:connectsecure"))
        };
        parser { p_add_context_splunk(key("pulse_connect_secure")); };
        parser (compliance_meta_by_source);
    };
    rewrite { set("$(template ${.splunk.sc4s_template} $(template t_msg_only))" value("MSG")); };


{{- if or (conv.ToBool (getenv "SC4S_DEST_SPLUNK_HEC_GLOBAL" "yes")) (conv.ToBool (getenv "SC4S_DEST_PULSE_CONNECT_SECURE_HEC" "no")) }}
    destination(d_hec);
{{- end}}

{{- if or (conv.ToBool (getenv "SC4S_ARCHIVE_GLOBAL" "no")) (conv.ToBool (getenv "SC4S_ARCHIVE_PULSE_CONNECT_SECURE" "no")) }}
    destination(d_archive);
{{- end}}

{{- if (print (getenv "SC4S_DEST_GLOBAL_ALTERNATES")) }}
    {{ getenv "SC4S_DEST_GLOBAL_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n    destination(" }});
{{- end }}

{{- if (print (getenv "SC4S_DEST_PULSE_CONNECT_SECURE_ALTERNATES")) }}
    {{ getenv "SC4S_DEST_PULSE_CONNECT_SECURE_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n    destination(" }});
{{- end }}

    flags(flow-control,final);
};
