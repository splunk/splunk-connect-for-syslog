# Startup events

log {
    source(s_startup_out);

    rewrite { r_set_splunk_dest_default(
        sourcetype("sc4s:events:startup:out")
        vendor_product("sc4s_events")
        )};
    parser {p_add_context_splunk(); };

{{- if (print (getenv "SC4S_DEST_INTERNAL_EVENT_ALT_FILTER")) }}

# HEC destination is *not* included by default for filtered destinations

    if (filter({{ print (getenv "SC4S_DEST_INTERNAL_EVENT_ALT_FILTER") }})) {
{{- if (print (getenv "SC4S_DEST_INTERNAL_EVENT_FILTERED_ALTERNATES")) }}
        {{ getenv "SC4S_DEST_INTERNAL_EVENT_FILTERED_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n        destination(" }});
{{- end }}
    }
    else {
{{- end }}

{{- if or (conv.ToBool (getenv "SC4S_DEST_SPLUNK_HEC_GLOBAL" "yes")) (conv.ToBool (getenv "SC4S_DEST_INTERNAL_EVENTS_HEC" "no")) }}
    destination(d_hec_internal);
{{- end}}

{{- if eq (getenv "SC4S_DEBUG_STDOUT" "no") "yes"}}
    destination(d_stdout);
{{- end}}

{{- if (print (getenv "SC4S_DEST_GLOBAL_ALTERNATES")) }}
    {{ getenv "SC4S_DEST_GLOBAL_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n    destination(" }});
{{- end }}

{{- if (print (getenv "SC4S_DEST_INTERNAL_EVENTS_ALTERNATES")) }}
    {{ getenv "SC4S_DEST_INTERNAL_EVENTS_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n    destination(" }});
{{- end }}

{{- if (print (getenv "SC4S_DEST_INTERNAL_EVENT_ALT_FILTER")) }}
    };
{{- end }}

    flags(flow-control,final);
 };

log {
    source(s_startup_err);

    rewrite { r_set_splunk_dest_default(sourcetype("sc4s:events:startup:err") vendor_product('sc4s_events'))};
    parser {p_add_context_splunk(); };

{{- if (print (getenv "SC4S_DEST_INTERNAL_EVENT_ALT_FILTER")) }}

# HEC destination is *not* included by default for filtered destinations

    if (filter({{ print (getenv "SC4S_DEST_INTERNAL_EVENT_ALT_FILTER") }})) {
{{- if (print (getenv "SC4S_DEST_INTERNAL_EVENT_FILTERED_ALTERNATES")) }}
        {{ getenv "SC4S_DEST_INTERNAL_EVENT_FILTERED_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n        destination(" }});
{{- end }}
    }
    else {
{{- end }}

{{- if or (conv.ToBool (getenv "SC4S_DEST_SPLUNK_HEC_GLOBAL" "yes")) (conv.ToBool (getenv "SC4S_DEST_INTERNAL_EVENTS_HEC" "no")) }}
    destination(d_hec_internal);
{{- end}}

{{- if eq (getenv "SC4S_DEBUG_STDOUT" "yes") "no"}}
    destination(d_stdout);
{{- end}}

{{- if (print (getenv "SC4S_DEST_GLOBAL_ALTERNATES")) }}
    {{ getenv "SC4S_DEST_GLOBAL_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n    destination(" }});
{{- end }}

{{- if (print (getenv "SC4S_DEST_INTERNAL_EVENTS_ALTERNATES")) }}
    {{ getenv "SC4S_DEST_INTERNAL_EVENTS_ALTERNATES" | regexp.ReplaceLiteral "^" "destination(" | regexp.ReplaceLiteral "[, ]+" ");\n    destination(" }});
{{- end }}

{{- if (print (getenv "SC4S_DEST_INTERNAL_EVENT_ALT_FILTER")) }}
    };
{{- end }}

    flags(flow-control,final);
};
