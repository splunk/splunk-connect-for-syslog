# Checkpoint Splunk format
{{- if (ne (getenv (print "SC4S_LISTEN_CHECKPOINT_SPLUNK_TCP_PORT") "no") "no") or (ne (getenv (print "SC4S_LISTEN_CHECKPOINT_SPLUNK_UDP_PORT") "no") "no") or (ne (getenv (print "SC4S_LISTEN_CHECKPOINT_SPLUNK_TLS_PORT") "no") "no") }}
{{ $context := dict "port_id" "CHECKPOINT_SPLUNK" "parser" "common" }}
{{ tmpl.Exec "t/source_network.t" $context }}
{{- end -}}
{{ define "log_path" }}
log {
{{- if eq (.) "yes"}}
    source(s_default-ports);
    filter(f_is_rfc3164);
    filter(f_checkpoint_splunk);
{{- end}}
{{- if eq (.) "no"}}
    source (s_dedicated_port_CHECKPOINT_SPLUNK);
{{- end}}

    parser {
        kv-parser(prefix(".kv.") pair-separator("|") template("${MSGHDR} ${MSG}"));
        date-parser(format("%s") template("${.kv.time}") time-zone({{- getenv "SC4S_DEFAULT_TIMEZONE" "GMT"}}));

    };

    rewrite { set("${.kv.hostname}", value("HOST")); };

    rewrite { r_set_splunk_dest_default(sourcetype("cp_log"), index("netfw"), template("t_hdr_msg"))};
    parser {p_add_context_splunk(key("checkpoint_splunk")); };

    parser (compliance_meta_by_source);

    destination(d_hec);  #--HEC--

    flags(flow-control);
};
{{- end}}
{{- if (ne (getenv (print "SC4S_LISTEN_CHECKPOINT_SPLUNK_TCP_PORT") "no") "no") or (ne (getenv (print "SC4S_LISTEN_CHECKPOINT_SPLUNK_UDP_PORT") "no") "no") or (ne (getenv (print "SC4S_LISTEN_CHECKPOINT_SPLUNK_TLS_PORT") "no") "no") }}
# Listen on the specified dedicated port(s) for CHECKPOINT_SPLUNK traffic
    {{ tmpl.Exec "log_path" "no" }}
{{- end}}

# Listen on the default port (typically 514) for CHECKPOINT_SPLUNK traffic
{{ tmpl.Exec "log_path" "yes" }}
