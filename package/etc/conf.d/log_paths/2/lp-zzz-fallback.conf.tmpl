# Fallback for un-parsed sources

log {
    
    rewrite { set("SC4S_fallback", value("fields.sc4s_vendor_product")); };

    if {
        filter(f_is_rfc5424_strict);
        rewrite { 
            r_set_splunk_dest_default(
                sourcetype("sc4s:fallback") 
                vendor_product('sc4s_fallback')
            ); 
        };
        parser { p_add_context_splunk(); };
        parser (compliance_meta_by_source);

    } else {

        rewrite { 
            r_set_splunk_dest_default(
                sourcetype("sc4s:fallback") 
                vendor_product('sc4s_fallback')
                template("t_JSON_3164")
            );
        };
        parser { p_add_context_splunk(); };
        parser (compliance_meta_by_source);
    };


    destination(d_hec_fmt);

    flags(flow-control,catchall, fallback);
};
