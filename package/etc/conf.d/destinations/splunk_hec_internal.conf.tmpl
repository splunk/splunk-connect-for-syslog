destination d_hec_internal {
    http(
         url("{{- getenv "SPLUNK_HEC_URL" }}")
         method("POST")
         log-fifo-size({{- getenv "SC4S_DEST_SPLUNK_HEC_LOG_FIFO_SIZE" "180000000"}})
         workers(10)
         batch-lines({{- getenv "SC4S_DEST_SPLUNK_HEC_BATCH_LINES" "1000"}})
         batch-bytes({{- getenv "SC4S_DEST_SPLUNK_HEC_BATCH_BYTES" "4096kb"}})
         batch-timeout({{- getenv "SC4S_DEST_SPLUNK_HEC_BATCH_TIMEOUT" "1000"}})
         timeout({{- getenv "SC4S_DEST_SPLUNK_HEC_TIMEOUT" "30"}})
         user_agent("sc4s/1.0 (events)")
         user("sc4s")
         headers("{{- getenv "SC4S_DEST_SPLUNK_HEC_HEADERS" "Connection: close"}}")
         password("{{- getenv "SPLUNK_HEC_TOKEN"}}")
         persist-name("splunk_hec_internal")
         response-action(400 => drop, 404 => retry)

         tls(peer-verify({{- getenv "SC4S_DEST_SPLUNK_HEC_TLS_VERIFY" "yes"}})
         {{- if ne (getenv "SC4S_DEST_SPLUNK_HEC_CIPHER_SUITE") ""}}
         cipher-suite("{{- getenv "SC4S_DEST_SPLUNK_HEC_CIPHER_SUITE"}}")
         {{- end}}
         {{- if ne (getenv "SC4S_DEST_SPLUNK_HEC_SSL_VERSION") ""}}
         ssl-version("{{- getenv "SC4S_DEST_SPLUNK_HEC_SSL_VERSION"}}")
         {{- end}}
         ca-file("{{- getenv "SC4S_DEST_SPLUNK_HEC_TLS_CA_FILE" "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"}}"))
         body('$(format-json
                 time=$S_UNIXTIME
                 host=${HOST}
                 source=${.splunk.source}
                 sourcetype=${.splunk.sourcetype}
                 index=${.splunk.index}
                 event=$MSG
                 {{- if ne (getenv "SC4S_DEST_SPLUNK_INDEXED_FIELDS") "none" }}
                 fields.*
                 {{- end }}
                 )')
        );
};