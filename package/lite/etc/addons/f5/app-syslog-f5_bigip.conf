block parser app-syslog-f5_bigip() {
 channel {
        rewrite {
            r_set_splunk_dest_default(
                index("netops")
                source("program:${PROGRAM}")
                sourcetype('f5:bigip:syslog')
                vendor('f5')
                product('bigip')
            );
        };
        if {
            parser {
                regexp-parser(
                    prefix(".tmp.")
                    template("$HOST")
                    patterns('^(?<slot>.*)\/(?<host>.*)')
                );
            };
            rewrite {
                set('${.tmp.slot}' value('fields.slot'));
                set('${.tmp.host}' value('HOST'));
            };
        };

        if {
            filter{
                program('tmm' type(string) flags(prefix))
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                    sourcetype('f5:bigip:ltm:ssl:error')
                    condition(message('[0-9A-Fa-f]{4}\d+:\d{1,2}:\sConnection\serror:\s\w*:<?\d+>?:.*\(\d+\)'))
                );
            };
            rewrite{
                r_set_splunk_dest_update_v2(
                    sourcetype('f5:bigip:ltm:tcl:error')
                    condition(message('[0-9A-Fa-f]{4}\d+:\d{1,2}:\sTCL\serror:\s.+\/(?:\s[^\s]+.*ERR_NOT_SUPPORTED)?'))
                );
            };
            rewrite{
                r_set_splunk_dest_update_v2(
                    sourcetype('f5:bigip:apm:syslog')
                    condition(program('tmm' type(string) flags(prefix)) and message('^(?:\d{4})[0-9A-Fa-f]{4}:\d+:\s+(?:[^:\s]{1,100}:[^:\s]{1,100}:\s*)?[0-9a-f]{8}:'))
                );
            };
            rewrite{
                r_set_splunk_dest_update_v2(
                    sourcetype('f5:bigip:ltm:traffic')
                    condition(message('[0-9A-Fa-f]{4}\d+:\d{1,2}:\sLimiting.+from\s\d+\sto\s\d+\spackets\/sec'))
                );
            };
            rewrite{
                r_set_splunk_dest_update_v2(
                    sourcetype('f5:bigip:ltm:log:error')
                    condition(message('[0-9A-Fa-f]{4}\d+:\d{1,2}:\s\w+\s-\sInvalid action:\w+\s.*\((?:[0-9]{1,3}\.){3}[0-9]{1,3}:\d{1,5}\s->\s(?:[0-9]{1,3}\.){3}[0-9]{1,3}:\d{1,5}\)\sclientside\s\((?:[0-9]{1,3}\.){3}[0-9]{1,3}:\d{1,5}\s->\s(?:[0-9]{1,3}\.){3}[0-9]{1,3}:\d{1,5}\)'))
                );
            };
        } elif {
            filter{
                not (program('iControlPortal.cgi' type(string) flags(prefix))
                or program('tmsh' type(string) flags(prefix))
                or program('mcpd' type(string) flags(prefix))
                or program('mprov' type(string) flags(prefix))
                or program('apmd' type(string) flags(prefix))
                or program('sshd\(pam_audit\)')
                or message('pam_radius_auth|authenticated|pam_bigip_authz|mod_auth_pam')
                );
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('nix_syslog')
                     sourcetype('nix:syslog')
                );
            };
        } else {};


   };
};
application app-syslog-f5_bigip[sc4s-syslog-pgm] {
	filter {
        (
            program('iControlPortal.cgi' type(string) flags(prefix))
            or program('tmsh' type(string) flags(prefix))
            or program('mcpd' type(string) flags(prefix))
            or program('mprov' type(string) flags(prefix))
            or program('apmd' type(string) flags(prefix))
            or program('tmm' type(string) flags(prefix))
            or (program('F5' type(string) flags(prefix)) and not match('access_json' value('MSGID')))
        )
        ;
    };	
    parser { app-syslog-f5_bigip(); };
};
