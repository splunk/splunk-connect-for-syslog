block parser app-syslog-f5_bigip_irule_splunk() {
    channel {
        parser {
            regexp-parser(
                prefix(".tmp.")
                patterns('^(?<host>[^,]+),f5_irule=(?<category>Splunk-[^,]+)')
            );
        };
        rewrite {
            r_set_splunk_dest_default(
                index('netops')
                source('f5:hsl')
                sourcetype('f5:bigip:irule')
                vendor('f5')
                product('bigip')
                class("irule")
            );
            set("${.tmp.host}", value("HOST"));
            set("${.tmp.category}", value(".f5.irule"));
        };
        rewrite {
            r_set_splunk_dest_update_v2(
                 sourcetype('f5:bigip:gtm:dns:request:irule') condition("${.f5.irule}" eq "Splunk-iRule-DNS_REQUEST")
            );
        };
        rewrite {
            r_set_splunk_dest_update_v2(
                 sourcetype('f5:bigip:gtm:dns:response:irule') condition("${.f5.irule}" eq "Splunk-iRule-DNS_RESPONSE")
            );
        };
        rewrite {
            r_set_splunk_dest_update_v2(
                 sourcetype('f5:bigip:ltm:http:irule') condition("${.f5.irule}" eq "Splunk-iRule-HTTP")
            );
        };
        rewrite {
            r_set_splunk_dest_update_v2(
                 sourcetype('f5:bigip:ltm:failed:irule') condition("${.f5.irule}" eq "Splunk-iRule-LB_FAILED")
            );
        };
    };
};
application app-syslog-f5_bigip_irule_splunk[sc4s-syslog] {
    parser { app-syslog-f5_bigip_irule_splunk(); };
};


