block parser app-netsource-dell_rsa_secureid() {
    channel {
        rewrite {
            r_set_splunk_dest_default(
                index('netauth')
                sourcetype('rsa:securid:trace')
                vendor('dell-rsa')
                product('secureid')

            );
        };

        if {
            filter{
                message('audit\.|system\.');
            };
            parser {
            #basic parsing

                #we need to actual even time from the field GeneratedTime. Use csv-parser to extract it.
                csv-parser(
                    columns("time","ms","host","type")
                    prefix(".tmp.")
                    delimiters(',')
                    );
                #2012/04/10 04:39:55
                #parse the date
                date-parser-nofilter(format(
                        '%Y-%m-%d %H:%M:%S,%f')
                        template("${LEGACY_MSGHDR} ${.tmp.time},${.tmp.ms}")
                );
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                    sourcetype('rsa:securid:syslog')
                );
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                    sourcetype('rsa:securid:admin:syslog')
                    condition(match('audit\.admin' value('.tmp.type')))
                );
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                    sourcetype('rsa:securid:system:syslog')
                    condition(match('\s*system\.+\w+' value('.tmp.type')))
                );
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                    sourcetype('rsa:securid:runtime:syslog')
                    condition(match('\s*audit\.runtime\.(com\.rsa|sa\.ims)' value('.tmp.type')))
                );
            };
        } elif {
            filter{
                program('...*')
                and not program('at' type(string))
                and not program('Caused' type(string))
            };
            rewrite {
                subst("^[^\t]+\t", "", value("MESSAGE"), flags("global"));
                set("${PROGRAM}", value(".PROGRAM"));
                subst('^\/(?:[^\/]+\/)+', "" , value(".PROGRAM"));
                r_set_splunk_dest_update_v2(
                    sourcetype('nix:syslog')
                );
            };
        } else {
            rewrite {
                r_set_splunk_dest_update_v2(
                    source('program:${.PROGRAM}')
                    sourcetype('rsa:securid:trace')
                    class('trace')
                );
            };
        };
    };
};
application app-netsource-dell_rsa_secureid[sc4s-network-source] {
	filter {
        not filter(f_is_source_identified)
        and (
                (
                    match("dell", value('.netsource.sc4s_vendor'), type(string)) 
                    and match("rsa_secureid", value('.netsource.sc4s_product'), type(string)) 
                )
                or ( tags("ns_vendor:dell") and tags("ns_product:rsa_secureid"))
                or tags(".source.s_DELL_RSA_SECUREID")
                or "${.netsource.sc4s_vendor_product}" eq "dell_rsa_secureid"
            )



    };	
    parser { app-netsource-dell_rsa_secureid(); };
};
