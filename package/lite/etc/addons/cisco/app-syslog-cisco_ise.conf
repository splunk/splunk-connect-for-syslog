#This parser adds messages from ACS to a context without sending them on to destination

parser ise_event_time {
    csv-parser(
        columns(DATE, TIME, TZ)
        prefix(".tmp.")
        delimiters(chars(" "))
        template('${.values.message}')
    );

    date-parser-nofilter(
            #YYYY- MM-DD hh:mm:ss:xxx +/-zh:zm
            format('%Y-%m-%d %H:%M:%S.%f %z')
            template("${.tmp.DATE} ${.tmp.TIME} ${.tmp.TZ}")
    );
};

block parser app-syslog-cisco_ise() {

    channel {

        if {
            parser {
                regexp-parser(
                    template("${MESSAGE}")
                    patterns("^(?<real_day>\\d{2}) (?<real_hour>\\d{2}:\\d{2}:\\d{2}) (?<real_host>[^ ]+) (?<real_program>[^ ]+) (?<rest_of_message>.*)")
                    prefix(".parsed.")
                );

                date-parser-nofilter(
                    format('%b %d %H:%M:%S')
                    template("${PROGRAM} ${.parsed.real_day} ${.parsed.real_hour}")
                );
            };
            rewrite {
                set("${.parsed.real_host}" value("HOST"));
                set("${.parsed.real_program}" value("PROGRAM"));
                set("${.parsed.rest_of_message}" value("MESSAGE"));
            };
        };

        parser {
            csv-parser(
                columns(serial, num, seq, message)
                prefix(".values.")
                delimiters(chars(" "))
                flags(greedy)
            );
        };

        rewrite {
            set(int("${.values.num:-0}") value(".values.num"));
        };

        if {
            filter {"${.values.seq}" eq "0"};
            parser(ise_event_time);
        };

        rewrite {
            r_set_splunk_dest_default(
                index('netauth')
                sourcetype('cisco:ise:syslog')
                vendor("cisco")
                product('ise')
            );
        };
    };
};

application app-syslog-cisco_ise[sc4s-syslog-pgm] {
	filter {
        program('CISE_' type(string) flags(prefix))
        or message('CISE_' type(string) flags(substring));
    };
    parser { app-syslog-cisco_ise(); };
};
