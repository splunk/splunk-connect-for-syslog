block parser app-postfilter-checkpoint_splunk_01-partials() {
    channel {
        rewrite(r_set_dest_splunk_null_queue);
    };
};

application app-postfilter-checkpoint_splunk_01-partials[sc4s-postfilter] {
	filter {
        match('checkpoint', value('fields.sc4s_vendor') type(string))
        and match('splunk', value('fields.sc4s_product') type(string))
        and "`SC4S_LISTEN_CHECKPOINT_SPLUNK_NOISE_INCOMPLETE_EVENTS`" eq "yes"
            and "${.values.loguid}" ne ""
            and "${.values.bytes}" eq ""
            and ( "${.values.product}" eq "Application Control" or "${.values.product}" eq "Firewall" or "${.values.product}" eq "URL Filtering")
            and ( "${.values.rule_action}" eq "Accept" or "${.values.rule_action}" eq "Inline")
        ;
    };	
    parser { app-postfilter-checkpoint_splunk_01-partials(); };
};