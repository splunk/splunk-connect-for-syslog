block parser app-syslog-checkpoint_syslog() {
    channel {

        parser {
            date-parser-nofilter(format("%s") template("${.SDATA.sc4s@2620.time}"));
        };

        rewrite {
            set("${.SDATA.sc4s@2620.hostname}", value("HOST") condition("${.SDATA.sc4s@2620.hostname}" ne ""));
            set("${.SDATA.sc4s@2620.hostname}", value("fields.cp_lm") condition("${.SDATA.sc4s@2620.hostname}" ne ""));

            r_set_splunk_dest_default(
                index('netfw')
                sourcetype('cp_log:syslog')
                vendor("checkpoint")
                product("syslog")
                template('t_5424_hdr_sdata_compact')
            );
        };


        if (
                "`SC4S_LISTEN_CHECKPOINT_SPLUNK_OLD_HOST_RULES`" eq "yes")
        {
            if {
                parser {
                    regexp-parser(
                        patterns('^[Cc][Nn]\\?=(?<HOST>[^,]+)')
                        template('${.SDATA.sc4s@2620.originsicname}')
                    );
                };
            } elif {
                #Get the FW host from the origin_sic_name
                parser {
                    regexp-parser(
                        patterns('^[Cc][Nn]\\?=(?<HOST>[^,]+)')
                        template('${.SDATA.sc4s@2620.origin_sic_name}')
                    );
                };
            } elif {
                # If hostname field is not empty, host should be evaluated from there
                parser {
                    regexp-parser(
                        patterns('(?<HOST>\S+)')
                        template('${.SDATA.sc4s@2620.hostname}')
                    );
                };
            };
        } else {
            if {
                # If hostname field is not empty, host should be evaluated from there
                parser {
                    regexp-parser(
                        patterns('(?<HOST>\S+)')
                        template('${.SDATA.sc4s@2620.hostname}')
                    );
                };
            } elif {
                #Get the FW host from the originsicname
                parser {
                    regexp-parser(
                        patterns('^[Cc][Nn]\\?=(?<HOST>[^,]+)')
                        template('${.SDATA.sc4s@2620.originsicname}')
                    );
                };
            } elif {
                #Get the FW host from the origin_sic_name
                parser {
                    regexp-parser(
                        patterns('^[Cc][Nn]\\?=(?<HOST>[^,]+)')
                        template('${.SDATA.sc4s@2620.origin_sic_name}')
                    );
                };
            };
        };
        # If this device is a v host we need to get the firewall name
        if {
            parser {
                regexp-parser(
                    patterns('-v_(?<HOST>.*)')
                    template("$HOST")
                );
            };
        };

        if {
            filter {
                "${.SDATA.sc4s@2620.product}" eq "Syslog"
            };
            parser {
                syslog-parser(
                    flags(assume-utf8, no-hostname)
                    template("${.SDATA.sc4s@2620.default_device_message}")
                    );
            };
            parser {
                date-parser-nofilter(format("%s") template("${.SDATA.sc4s@2620.time}"));
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('nix_${PROGRAM}')
                     index('netops')
                     source('program:${PROGRAM}')
                     sourcetype('nix:syslog')
                );

            };
        } elif {
            filter {
                match('Firewall' value('.SDATA.sc4s@2620.product'))
                or match('Application\h+Control' value('.SDATA.sc4s@2620.product'))
                or match('RAD' value('.SDATA.sc4s@2620.product'))
                or match('HTTPS\h+Inspection' value('.SDATA.sc4s@2620.product'))
                or match('Compliance\h+Blade' value('.SDATA.sc4s@2620.product'))
                or match('^Compliance' value('.SDATA.sc4s@2620.product'))
                or match('VPN-1\h+&\h+Fire[wW]all-1' value('.SDATA.sc4s@2620.product'))
                or match('Network\h+Security' value('.SDATA.sc4s@2620.product'))
                and not match('VPN' value('.SDATA.sc4s@2620.fw_subproduct'))
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('firewall')
                     index('netfw')
                     source('checkpoint:firewall')
                );
            };
        } elif  {
            filter {
                match('U[rR][lL]\h+Filtering' value('.SDATA.sc4s@2620.product'))
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('web')
                     index('netproxy')
                     source('checkpoint:web')
                );
            };
        } elif  {
            filter {
                match('Scheduled\h+system\h+update' value('.SDATA.sc4s@2620.product'))
                or match('WEB_API' value('.SDATA.sc4s@2620.product'))
                or match('SmartDefense' value('.SDATA.sc4s@2620.product'))
                or match('Smart\h+Defense' value('.SDATA.sc4s@2620.product'))
                or match('W[eE][bB]-UI' value('.SDATA.sc4s@2620.product'))
                or match('SmartDashboard' value('.SDATA.sc4s@2620.product'))
                or match('System\h+Monitor' value('.SDATA.sc4s@2620.product'))
                or match('Log\h+Update' value('.SDATA.sc4s@2620.product'))
                or match('license-mgmt' value('.SDATA.sc4s@2620.product'))
                or match('smart_event' value('.SDATA.sc4s@2620.product'))
                or match('SmartConsole' value('.SDATA.sc4s@2620.product'))
                or match('SmartEvent\h+Client' value('.SDATA.sc4s@2620.product'))
                or match('SmartUpdate' value('.SDATA.sc4s@2620.product'))
                or match('SmartView' value('.SDATA.sc4s@2620.product'))
                or match('Security\h+Gateway\/Management' value('.SDATA.sc4s@2620.product'))
                or match('Smart\h+Defense' value('.SDATA.sc4s@2620.product'))
                or match('WEB_API_INTERNAL' value('.SDATA.sc4s@2620.product'))
                or match('Eventia\h+Analyzer\h+Client' value('.SDATA.sc4s@2620.product'))
                or match('SmartProvisioning\h+Connector' value('.SDATA.sc4s@2620.product'))
                or match('SmartLSM\h+Endpoint\h+Security\h+Console' value('.SDATA.sc4s@2620.product'))
                or match('SmartLSM' value('.SDATA.sc4s@2620.product'))
                or match('ROBO\h+GUI' value('.SDATA.sc4s@2620.product'))
                or match('Management\h+Blade' value('.SDATA.sc4s@2620.product'))
                or match('Connectra' value('.SDATA.sc4s@2620.product'))
                or match('Check\h+Point\h+Security\h+Management\h+Server' value('.SDATA.sc4s@2620.product'))
                or match('CLI' value('.SDATA.sc4s@2620.product'))
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('audit')
                     index('netops')
                     source('checkpoint:audit')
                );
            };
        } elif  {
            filter {
                match('Endpoint\h+Management' value('.SDATA.sc4s@2620.product'))
                or match('Core' value('.SDATA.sc4s@2620.product'))
                or match('Endpoint\h+Compliance' value('.SDATA.sc4s@2620.product'))
                or match('MEPP' value('.SDATA.sc4s@2620.product'))
                or match('Media\h+Encryption\h+&\h+Port\h+Protection' value('.SDATA.sc4s@2620.product'))
                or match('Endpoint\h+Security\h+Console' value('.SDATA.sc4s@2620.product'))
                or match('endpoint' value('.SDATA.sc4s@2620.product'))
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('endpoint')
                     index('netops')
                     source('checkpoint:endpoint')
                );
            };
        } elif  {
            filter {
                match('^VPN$' value('.SDATA.sc4s@2620.product'))
                or match('^Mobile$' value('.SDATA.sc4s@2620.product'))
                or match('Mobile\h+App' value('.SDATA.sc4s@2620.product'))
                or match('VPN' value('.SDATA.sc4s@2620.fw_subproduct'))
                or match('VPN-1' value('.SDATA.sc4s@2620.fw_subproduct'))
                or match('Identity\h+Awareness' value('.SDATA.sc4s@2620.product'))
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('sessions')
                     index('netops')
                     source('checkpoint:sessions')
                );
            };
        } elif  {
            filter {
                match('IOS\h+Profile' value('.SDATA.sc4s@2620.product'))
                or match('iOS\h+Profiles' value('.SDATA.sc4s@2620.product'))
                or match('Device' value('.SDATA.sc4s@2620.product'))
                or match('WIFI\h+Network' value('.SDATA.sc4s@2620.product'))
                or match('Mobile\h+Access' value('.SDATA.sc4s@2620.product'))
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('network')
                     index('netops')
                     source('checkpoint:network')
                );
            };
        } elif  {
            filter {
                match('Threat\h+Emulation' value('.SDATA.sc4s@2620.product'))
                or match('Anti-Virus' value('.SDATA.sc4s@2620.product'))
                or match('New\h+Anti\h+Virus' value('.SDATA.sc4s@2620.product'))
                or match('Anti-Bot' value('.SDATA.sc4s@2620.product'))
                or match('Threat\h+Extraction' value('.SDATA.sc4s@2620.product'))
                or match('Anti-Ransomware' value('.SDATA.sc4s@2620.product'))
                or match('Anti-Exploit' value('.SDATA.sc4s@2620.product'))
                or match('Forensics' value('.SDATA.sc4s@2620.product'))
                or match('OS\h+Exploit' value('.SDATA.sc4s@2620.product'))
                or match('OS\h+Exploits' value('.SDATA.sc4s@2620.product'))
                or (match('Application' value('.SDATA.sc4s@2620.product')) and not match('Application Control' value('.SDATA.sc4s@2620.product')))
                or match('Text\h+Message' value('.SDATA.sc4s@2620.product'))
                or match('Network\h+Access' value('.SDATA.sc4s@2620.product'))
                or match('Zero\h+Phishing' value('.SDATA.sc4s@2620.product'))
                or match('Anti-Malware' value('.SDATA.sc4s@2620.product'))
                or match('Anti\h+Malware' value('.SDATA.sc4s@2620.product'))
                or match('Anti\h+Malware\h+New\h+Anti\h+Virus' value('.SDATA.sc4s@2620.product'))
                or match('New\h+Anti\h+Virus\h+Anti\h+Malware' value('.SDATA.sc4s@2620.product'))
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('ids_malware')
                     index('netids')
                     source('checkpoint:ids_malware')
                );
            };
        } elif  {
            filter {
                match('IPS' value('.SDATA.sc4s@2620.product'))
                or match('W[iI][fF][iI]' value('.SDATA.sc4s@2620.product'))
                or match('Cellular' value('.SDATA.sc4s@2620.product'))
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('ids')
                     index('netids')
                     source('checkpoint:ids')
                );
            };
        } elif  {
            filter {
                match('MTA' value('.SDATA.sc4s@2620.product'))
                or match('Anti-Spam' value('.SDATA.sc4s@2620.product'))
                or match('Anti\h+Spam' value('.SDATA.sc4s@2620.product'))
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('email')
                     index('email')
                     source('checkpoint:email')
                );
            };
        } elif  {
            filter {
                match('DLP' value('.SDATA.sc4s@2620.product'))
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('dlp')
                     index('netfw')
                     source('checkpoint:firewall')
                );
            };
        } elif {
            filter {
                match('Syslog' value('.SDATA.sc4s@2620.product'))
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('os')
                     index('netops')
                );
            };
        } else {
            rewrite {
                r_set_splunk_dest_update_v2(
                     index('netops')
                     source('checkpoint:cp_default')
                );
            };
        };
    };

};
application app-syslog-checkpoint_syslog[sc4s-syslog-pgm] {
	filter {
        program('CheckPoint' type(string) flags(prefix));
    };	

    parser { app-syslog-checkpoint_syslog(); };
};

