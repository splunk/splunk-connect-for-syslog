# template t_vmware_vsphere_cmmdsTimeMachineDump {
#         template("${.metadata.seq}|${.metadata.id}|${.gb.message}");
# };



block parser app-postfilter-vmware_vsphere_invalidmultiline() {
    channel {

        parser{
            grouping-by(
                scope(program)
                key('$SOURCEIP')
                aggregate(
                    tags("agg")
                    value(".gb.message" "$(implode '\n' $(list-slice 0:-1 $(context-values ${MESSAGE})))")
                    value("PROGRAM" "${PROGRAM}@1")
                    value("HOST" "${HOST}@1")
                    value(".splunk.sc4s_template", "${.splunk.sc4s_template}@1")
                    value(".splunk.index", "${.splunk.index}@1")
                    value(".splunk.source", "${.splunk.source}@1")
                    value(".splunk.sourcetype", "${.splunk.sourcetype}@1")
                    value("fields.sc4s_vendor", "${fields.sc4s_vendor}@1")
                    value("fields.sc4s_product", "${fields.sc4s_product}@1")
                    value("fields.sc4s_class", "${fields.sc4s_class}@1")
                    value(".metadata.sc4s.countOfParts", "$(context-length)")
                    tags("isStructured")
                    inherit-mode(context)
                )
                timeout(2)
            );
        };

        if {
            filter {
                filter(f_is_agg)
            };
        } else {
            rewrite(r_set_dest_splunk_null_queue);
        };


    };
};
application app-postfilter-vmware_vsphere_invalidmultiline[sc4s-postfilter] {
    filter {
        match('vmware', value('fields.sc4s_vendor') type(string))
        and (
                match('vsphere', value('fields.sc4s_product') type(string))
                or match('vcenter', value('fields.sc4s_product') type(string) )
                or match('esx', value('fields.sc4s_product') type(string))
            )
        and "`SC4S_SOURCE_VMWARE_VSPHERE_GROUPMSG`" eq "yes"
        and (
            message('^--> ')
            or message('[{:}] *$')
        )


    };

    parser { app-postfilter-vmware_vsphere_invalidmultiline(); };
};
