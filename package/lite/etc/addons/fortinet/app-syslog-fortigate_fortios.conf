block parser app-syslog-fortigate_fortios() {
 channel {

        parser {
            kv-parser(prefix(".values.") template("$(template t_hdr_msg)"));
        };
        filter {
			"${.values.eventtime}" ne ""
            or (
                "${.values.date}" ne ""
                and "${.values.time}" ne ""
            )
		};
        parser {
            regexp-parser(
                patterns('^F(?<dev_type>[A-Z]|\dK)(?<serial>.+)')
                prefix(".tmp.")
                template('${.values.devid}')
            );
        };

        rewrite {
            r_set_splunk_dest_default(
                index('netops')
                sourcetype('`SC4S_OPTION_FORTINET_SOURCETYPE_PREFIX`_log')
                vendor("fortinet")
                product("fortios")
                class("log")
                template('t_msg_only')
            );
            set("${.values.devname}", value("HOST"));
            set("$(template t_hdr_msg)" value("MESSAGE"));
            unset(value("PROGRAM"));
        };

        if {
            filter {
                "${.values.eventtime}" ne ""
            };
            parser {
                regexp-parser(
                    prefix(".tmp.")
                    template("${.values.eventtime}")
                    patterns('^(?<timestamp>\d{10})\.?(?<fraq>\d{3,6})')
                );
            };
            parser {
                date-parser-nofilter(
                    format(
                        '%s.%f',
                        )
                    template("${.tmp.timestamp}.${.tmp.fraq:-000}")
                );
            };
        } else {
            parser {
                date-parser-nofilter(
                    format(
                        '%Y-%m-%d:%H:%M:%S%z',
                        '%Y-%m-%d:%H:%M:%S'
                        )
                    template("${.values.date}:${.values.time}${.values.tz}")
                );
            };
        };
        if {
            filter{
                "${.values.type}" eq "event"
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                        class('${.values.type}')
                        index('netops')
                        sourcetype('`SC4S_OPTION_FORTINET_SOURCETYPE_PREFIX`_${.values.type}')
                );
            };
        } elif {
            filter {
                match("traffic|utm|anomaly" value(".values.type"));
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                        class('${.values.type}')
                        index('netfw')
                        sourcetype('`SC4S_OPTION_FORTINET_SOURCETYPE_PREFIX`_${.values.type}')
                );
            };
        } else {
            rewrite {
                r_set_splunk_dest_update_v2(
                        class('${.values.type}')
                        sourcetype('`SC4S_OPTION_FORTINET_SOURCETYPE_PREFIX`_${.values.type}')
                );
            };
        };
   };
};
application fortinet_fortios[sc4s-syslog] {
	parser { app-syslog-fortigate_fortios(); };
};
