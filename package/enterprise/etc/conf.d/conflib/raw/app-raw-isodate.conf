rewrite set_raw_raw_isodate{
    set-tag("wireformat:raw_raw_isodate");
};
filter f_is_raw_raw_isodate{
    tags("wireformat:raw_raw_isodate");
};

block parser app-raw-isodate() {
    channel {
        parser {
            regexp-parser(
                prefix(".tmp.")
                patterns('^(?<timestamp>\d{4}-\d{2}-\d{2}(?: |T)?\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:[+-]\d{2}:?\d{2}|Z)?)\s?(?<message>.*)')
            );
        };
        rewrite {
            set("${.tmp.message}", value("MESSAGE"));
        };
        if {
            parser {
                date-parser(
                    format(
                        '%Y-%m-%dT%T.%f%z',
                        '%Y-%m-%dT%T%z',
                        '%Y-%m-%d %T.%f%z',
                        '%Y-%m-%d %T%z',
                        '%Y-%m-%d%T.%f%z',
                        '%Y-%m-%d%T%z',
                    )
                    template("${.tmp.timestamp}")
                );
            };
        } else {
            parser {
                date-parser(
                    format(
                        '%Y-%m-%dT%T.%f',
                        '%Y-%m-%dT%T',
                        '%Y-%m-%d %T.%f',
                        '%Y-%m-%d %T',
                        '%Y-%m-%d%T.%f',
                        '%Y-%m-%d%T',
                    )
                    flags(guess-timezone)
                    template("${.tmp.timestamp}")
                );
            };
        };


        rewrite(set_raw);
        rewrite(set_raw_raw_isodate);
   };
};
application app-raw-isodate[sc4s-raw-syslog] {
    parser { app-raw-isodate(); };
};
