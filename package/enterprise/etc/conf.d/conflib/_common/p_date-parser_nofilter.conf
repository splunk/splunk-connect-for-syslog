block parser date-parser-nofilter(
    format()
    template()
    ) {
        channel {
            if {
                parser {
                    date-parser(format(`format`) template("`template`")
                    );
                };
                rewrite {
                    #We originally used this feaure as part of the date-parser above
                    #However when date-parser is called twice due to a non standard header
                    #The second call does not correctly guess the tz IF its part of date-parser
                    #But does work as a re-write. We think this is a syslog-ng bug
                    guess-time-zone();
                };

            } else {
                rewrite { set("dtparse: Expected: `format`; Actual: `template`" value("fields.sc4s_error")); };
            };
        };
    };

block parser date-parser-alts-nofilter(
    fmt_one()
    fmt_two()
    template()) {
    channel {
        if {
            parser {
                date-parser(format(`fmt_one`) template("`template`")
                flags(guess-timezone));
            };
            filter {
                '$(round $(- "$S_UNIXTIME" "$R_UNIXTIME"))' < 43200
                and '$(round $(- "$S_UNIXTIME" "$R_UNIXTIME"))' > -43200
            };
        } elif {
            parser {
                date-parser(format(`fmt_two`) template("`template`")
                flags(guess-timezone));
            };
            filter {
                '$(round $(- "$S_UNIXTIME" "$R_UNIXTIME"))' < 43200
                and '$(round $(- "$S_UNIXTIME" "$R_UNIXTIME"))' > -43200
            };
        } else {
            rewrite { set("dtparse: Expected: `fmt_one` OR `fmt_two`; Actual: `template`" value("fields.sc4s_error")); };
        };
    };
};
