block parser app-netsource-barracuda_syslog() {
    channel {
        rewrite {
            r_set_splunk_dest_default(
                index("netops")
                sourcetype('barracuda:syslog')
                vendor("barracuda")
                product("syslog")
                template("t_msg_only")
            );
        };
        parser {
            kv-parser(
                prefix(".values.")
                pair-separator(" ")
            );
        };
        # Web Firewall Logs (WF)	web_firewall_logs
        # Access Logs (TR)	access_logs
        # Audit Logs (AUDIT)	audit_logs
        # Network Firewall Logs (NF)	network_firewall_logs
        if {
            filter {                
                "${.values.logType}" ne "";
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                    sourcetype('barracuda:$(lowercase ${.values.logType})')
                    class('$(lowercase ${.values.logType})')
                );
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                    index('netfw')
                    condition(match('nf' value('.values.logType') type(string) ,flags(ignore-case) ))
                );
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                    index('netwaf')
                    condition(match('wf' value('.values.logType') type(string) ,flags(ignore-case) ))
                );
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                    index('netwaf')
                    condition(match('tr' value('.values.logType') type(string) ,flags(ignore-case) ))
                );
            };
        };
    };
};
application app-netsource-barracuda_syslog[sc4s-network-source] {
	filter {
        not filter(f_is_source_identified)
        and (
                (
                    match("barracuda", value('.netsource.sc4s_vendor'), type(string)) 
                    and match("syslog", value('.netsource.sc4s_product'), type(string)) 
                )
                or (tags("ns_vendor:barracuda") and tags("ns_product:syslog"))
                or tags(".source.s_BARRACUDA_SYSLOG")
            )
        ;
    };	
    parser { app-netsource-barracuda_syslog(); };
};


