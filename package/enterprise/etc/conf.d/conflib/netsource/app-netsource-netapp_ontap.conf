block parser app-netsource-netapp_ontap() {
    channel {
        rewrite {
            r_set_splunk_dest_default(
                index("infraops")
                vendor("netapp")
                product("ontap")
            );
        };

        if {
            parser {
                regexp-parser(
                    prefix(".tmp.")
                    patterns('^[A-Za-z0-9\-\_\.]+: [0-9a-f]+\.[0-9a-f]+ [0-9a-f]+ [A-Z][a-z][a-z] (?<timestamp>[A-Z][a-z][a-z] \d\d \d\d\d\d \d\d:\d\d:\d\d [+-]?\d{1,2}:\d\d)')
                );
                date-parser-nofilter(
                    format(
                        '%b %d %Y %H:%M:%S %z',
                    )
                    template("${.tmp.timestamp}")
                );
            };

            rewrite {
                set('$PROGRAM: $MESSAGE', value(MESSAGE));
                set('$PROGRAM', value(HOST));
                unset(value(PROGRAM));
            };

            rewrite {
                r_set_splunk_dest_update_v2(
                    sourcetype('netapp:ontap:audit')
                    class('audit')
                );
            };
        } elif {
            parser {
                regexp-parser(
                    prefix(".tmp.")
                    patterns('\[(?<host>[^:]+):(?<category>[^:]+):(?<severity>[^\]]+)\]: (?<message>.*)')
                    template("${MESSAGE}")
                );
            };
            rewrite {
                set('${.tmp.message}' value('MESSAGE'));
                set('${.tmp.host}' value('HOST'));
                set('${.tmp.category}' value('fields.category'));
                set('${.tmp.severity}' value('fields.severity'));
            };
            rewrite {
                r_set_splunk_dest_update_v2(
                    sourcetype('netapp:ontap:ems')
                    class('ems')
                );
            };
        } else {
            rewrite {
                r_set_splunk_dest_update_v2(
                    sourcetype('netapp:ontap:ems')
                    class('ems')
                );
            };
        };
    };
};

application app-netsource-netapp_ontap[sc4s-network-source] {
    filter {
        match("netapp", value('.netsource.sc4s_vendor'), type(string))
        and match("ontap", value('.netsource.sc4s_product'), type(string))
        and "`SC4S_NETAPP_ONTAP_NEW_FORMAT`" eq "yes"
    };
    parser { app-netsource-netapp_ontap(); };
};