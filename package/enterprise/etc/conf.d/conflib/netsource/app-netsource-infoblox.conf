block parser app-netsource-infoblox() {
 channel {
        rewrite {
            set("${PROGRAM}", value(".PROGRAM"));
            subst('^\/(?:[^\/]+\/)+', "" , value(".PROGRAM"));
            r_set_splunk_dest_default(
                index('netops')
                source('program:${.PROGRAM}')
                sourcetype('infoblox')
                vendor("infoblox")
                product("nios")
                template('t_hdr_msg')
            );
        };

        if {
            filter{program('named' type(string) flags(prefix))};
            rewrite {
                r_set_splunk_dest_update_v2(
                     index('netdns')
                     class('dns')
                     source('program:${PROGRAM}')
                     sourcetype('infoblox:dns')
                );
            };
        } elif {
            filter{program('dhcpd' type(string) flags(prefix))};
            rewrite {
                r_set_splunk_dest_update_v2(
                     index('netipam')
                     class('dhcp')
                     source('program:${PROGRAM}')
                     sourcetype('infoblox:dhcp')
                );
            };
        } elif {
            filter{program('threat-protect-log' type(string) flags(prefix))};
            rewrite {
                r_set_splunk_dest_update_v2(
                     index('netids')
                     class('threatprotect')
                     source('program:${PROGRAM}')
                     sourcetype('infoblox:threatprotect')
                );
                };
        } elif {
            filter{message('^\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}(\.\d+)Z\s+\[[^\]]+\]:')};
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('audit')
                     source('program:${PROGRAM}')
                     sourcetype('infoblox:audit')
                );
            };
       } else {
            rewrite {
                r_set_splunk_dest_update_v2(
                     class('fallback')
                     source('program:${PROGRAM}')
                     sourcetype('infoblox:port')
                );
                };
            rewrite {
                subst("^[^\t]+\t", "", value("MESSAGE"), flags("global"));
            };
        };


   };
};
application app-netsource-infoblox[sc4s-network-source] {
	filter {
        (
            (
                    match("infoblox", value('.netsource.sc4s_vendor'), type(string)) 
                    and match("nios", value('.netsource.sc4s_product'), type(string)) 
            )
            or ( tags("ns_vendor:infoblox") and tags("ns_product:nios"))
            or tags(".source.s_INFOBLOX")
            or "${.netsource.sc4s_vendor_product}" eq "infoblox_nios"
        )
        and not message('CEF:0', type('string') flags(prefix))
    };	
    parser { app-netsource-infoblox(); };
};
