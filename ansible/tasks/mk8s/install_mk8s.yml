---
- name: Install mk8s
  community.general.snap:
    name: microk8s
    classic: yes
    channel: 1.24

- name: Wait for microk8s to be ready
  become: yes
  command: microk8s.status --wait-ready
  changed_when: false
  register: mk8sstatusout
  failed_when:
      - "'This MicroK8s deployment is acting as a node in a cluster.' not in mk8sstatusout.stdout_lines"
      - mk8sstatusout.rc > 0

- name: Add current user to group of 'microk8s'
  ansible.builtin.shell: usermod -a -G microk8s $USER

- name: Add ownership of ~/.kube catalog for current user
  ansible.builtin.shell: chown -f -R $USER ~/.kube

- name: Get current addons state
  become: yes
  command:
    cmd: microk8s.status --format yaml
  changed_when: no
  register: microk8s_status

- name: Set current state fact
  set_fact:
    microk8s_status: "{{ microk8s_status.stdout | from_yaml }}"

- name: Enable community modules
  ansible.builtin.shell: microk8s enable community

- name: Enable metallb
  ansible.builtin.shell: echo "{{ ansible_ssh_host }}/32" | microk8s enable metallb

- name: Enable addons
  become: yes
  loop: "{{ microk8s_status.addons }}"
  loop_control:
    label: "{{ item.name }}"
  command:
    cmd: microk8s.enable {{ item.name }}{% if microk8s_plugins[item.name] != True %}:{{ microk8s_plugins[item.name] }}{% endif %}
  when:
    - item.status == 'disabled'
    - item.name in microk8s_plugins
    - microk8s_plugins[item.name]

- name: Disable addons
  become: yes
  loop: "{{ microk8s_status.addons }}"
  loop_control:
    label: "{{ item.name }}"
  command:
    cmd: microk8s.disable {{ item.name }}
  when:
    - item.status == 'enabled'
    - item.name in microk8s_plugins
    - not microk8s_plugins[item.name]
