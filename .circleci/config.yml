#Splunk Connect for Syslog (SC4S) by Splunk, Inc.
#
#To the extent possible under law, the person who associated CC0 with
#Splunk Connect for Syslog (SC4S) has waived all copyright and related or neighboring rights
#to Splunk Connect for Syslog (SC4S).
#
#You should have received a copy of the CC0 legalcode along with this
#work.  If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
version: 2.1
orbs:
  go: circleci/go@0.2.0

jobs:
  test-sc4s:
    parameters:
      syslog:
        type: string
      splunk:
        type: string
    docker:
      - image: circleci/python:3.7
    environment:
      SYSLOG: "<< parameters.syslog >>"
      SPLUNK_VERSION: "<< parameters.splunk >>"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Setup for testing
          command: |
            pip install -r tests/requirements.txt
            mkdir test-results
      - run:
          name: Version
          command: |
            VERSION=$(./semtag getcurrent)
            echo $VERSION
            echo ${VERSION} >package/VERSION
      - run:
          name: test
          command: |
            docker-compose -f tests/docker-compose-ci.yml build 
            docker-compose -f tests/docker-compose-ci.yml up -d splunk
            sleep 90
            docker-compose -f tests/docker-compose-ci.yml up --abort-on-container-exit
          no_output_timeout: 1h
      - run:
          name: collect results
          when: always
          command: |
            docker container create --name dummy \
                                -v tests_results:/work/test-results \
                                registry.access.redhat.com/ubi7/ubi
            docker cp dummy:/work/test-results/test.xml test-results/
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results
  tag:
    parameters:
      semtag:
        type: string
    docker:
      - image: circleci/python:3.7
    environment:
      SEMTAG: "<< parameters.semtag >>"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "7c:e9:cc:8d:8e:4d:9c:17:1d:e3:96:23:ce:bd:a4:c3"
      - checkout
      - run:
          name: TAG
          command: |
            ./semtag ${SEMTAG}

  docker:
    docker:
      - image: circleci/python:3.7
    parameters:
      level:
        type: string
    environment:
      SEM_LEVEL: "<< parameters.level >>"
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Docker Login
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Build Docker
          command: |
            if [ -n "${CIRCLE_TAG}" ]; then VERSION=${CIRCLE_TAG}; else VERSION="$(./semtag getcurrent)"; fi
            echo ${VERSION} >package/VERSION
            echo ${CIRCLE_SHA1}=${VERSION}
            VERSION_DOCKER_M=$(echo  $VERSION | sed -n 's/v\([0-9]\).*/\1/p')
            VERSION_DOCKER_MM=$(echo  $VERSION | sed -n 's/v\([0-9]*\.[0-9]*\).*/\1/p')
            VERSION_DOCKER_MMP=$(echo  $VERSION | sed -n 's/v\([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p')
            [ "$SEM_LEVEL" = "M" ] && TAG=$VERSION_DOCKER_M
            [ "$SEM_LEVEL" = "MM" ] && TAG=$VERSION_DOCKER_MM
            [ "$SEM_LEVEL" = "latest" ] && TAG=latest
            docker pull splunk/scs:${CIRCLE_SHA1} 
            docker tag splunk/scs:${CIRCLE_SHA1} splunk/scs:${SEM_LEVEL}            
            docker push splunk/scs:${SEM_LEVEL}

  merge-beta-to-master:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "7c:e9:cc:8d:8e:4d:9c:17:1d:e3:96:23:ce:bd:a4:c3"
      - checkout
      - run:
          name: Merge
          command: |
            git config --global user.email "addonreleasesrv@splunk.com"
            git config --global user.name "Add on release service"
            git pull origin master
            git merge master -m "Merge from master"
            git checkout master
            git merge develop
            git push

  publish:
    docker:
      - image: circleci/python:3.7
    environment:
      SYSLOG: "syslog-ng-3.28.1"
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Docker Login
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: BYOE Config
          command: |
            if [ -n "${CIRCLE_TAG}" ]; then VERSION=${CIRCLE_TAG}; else VERSION="$(./semtag getcurrent)"; fi
            VERSION_DOCKER_MMP=$(echo  $VERSION | sed -n 's/v\([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p')
            echo ${VERSION} >package/etc/VERSION                      
            tar rvf /tmp/workspace/baremetal.tar -C package/etc .
            tar rvf /tmp/workspace/baremetal.tar -C package/sbin entrypoint.sh
            rm -f package/etc/VERSION
      - run:
          name: Build Docker
          command: |
            if [ -n "${CIRCLE_TAG}" ]; then VERSION=${CIRCLE_TAG}; else VERSION="$(./semtag getcurrent)"; fi
            VERSION_DOCKER_MMP=$(echo  $VERSION | sed -n 's/v\([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p')
            echo ${VERSION} >package/VERSION
            echo ${CIRCLE_SHA1}=${VERSION}
            docker build --build-arg BRANCH=${SYSLOG} package -t splunk/scs:${CIRCLE_SHA1}
            docker tag splunk/scs:${CIRCLE_SHA1} splunk/scs:${VERSION}
            docker tag splunk/scs:${CIRCLE_SHA1} splunk/scs:${VERSION_DOCKER_MMP}
            docker tag splunk/scs:${CIRCLE_SHA1} splunk/scs:${CIRCLE_SHA1:0:7}
            docker push splunk/scs:${CIRCLE_SHA1}
            docker push splunk/scs:${VERSION}
            docker push splunk/scs:${VERSION_DOCKER_MMP}
            docker push splunk/scs:${CIRCLE_SHA1:0:7}
            docker save splunk/scs:${VERSION_DOCKER_MMP} | gzip -c > /tmp/workspace/oci_container.tar.gz
      - go/install
      - run:
          name: "Setup for pandoc"
          command: |
            wget https://github.com/jgm/pandoc/releases/download/2.10.1/pandoc-2.10.1-1-amd64.deb
            sudo dpkg -i pandoc-2.10.1-1-amd64.deb
            sudo apt-get install texlive
            pandoc -s --pdf-engine=pdflatex -o SC4S_docs.pdf $(find . -type f -name "*.md")
            cp SC4S_docs.pdf /tmp/workspace/SC4S_docs.pdf
      - run:
          name: "Publish on GitHub"
          command: |
            go get -v -u github.com/tcnksm/ghr
            PATH=$PATH:/usr/local/go/bin
            if [ -n "${CIRCLE_TAG}" ]; then VERSION=${CIRCLE_TAG}; else VERSION="$(./semtag getcurrent)"; fi
            echo ${VERSION} >package/VERSION            
            [ "$(./semtag getfinal)" != "${CIRCLE_TAG}" ] && ISPRE="-prerelease" || ISPRE=""
            $HOME/go/bin/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${ISPRE} -delete ${VERSION} /tmp/workspace/

      - store_artifacts:
          path: /tmp/workspace/

workflows:
  version: 2
  build_test:
    jobs:
      - test-sc4s:
          matrix:
            parameters:
              syslog: ["syslog-ng-3.28.1", "master"]
              splunk: ["7.2", "7.3", "8.0"]
      - approval-tag-alpha:
          type: approval
          filters:
            branches:
              only: develop
      - tag:
          name: tag-alpha
          semtag: alpha
          requires:
            - approval-tag-alpha
      - approval-tag-beta:
          requires:
            - tag-alpha
          type: approval
          filters:
            branches:
              only: develop
      - tag:
          name: tag-beta
          semtag: beta
          requires:
            - approval-tag-beta
      - approval-merge-beta-to-master:
          requires:
            - tag-beta
          type: approval
          filters:
            branches:
              only: develop
      - merge-beta-to-master:
          requires:
            - approval-merge-beta-to-master
          filters:
            branches:
              only: develop
      - tag:
          name: tag-candidate
          semtag: candidate
          filters:
            branches:
              only: master
      - approval-tag-final-major:
          type: approval
          requires:
            - tag-candidate
      - tag:
          name: tag-final-major
          semtag: "final -s major"
          requires:
            - approval-tag-final-major
      - approval-tag-final-minor:
          type: approval
          requires:
            - tag-candidate
      - tag:
          name: tag-final-minor
          semtag: "final -s minor"
          requires:
            - approval-tag-final-minor
      - approval-tag-final-patch:
          type: approval
          requires:
            - tag-candidate
      - tag:
          name: tag-final-patch
          semtag: "final -s patch"
          requires:
            - approval-tag-final-patch

  publish:
    jobs:
      - publish:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*.*$/
      - approval-docker-major:
          type: approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*$/
          requires:
            - publish
      - docker:
          name: docker-major
          level: "MM"
          requires:
            - approval-docker-major
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*$/
      - approval-docker-minor:
          type: approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*$/
          requires:
            - publish
      - docker:
          name: docker-minor
          level: "M"
          requires:
            - approval-docker-minor
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*$/
      - approval-docker-latest:
          type: approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*$/
          requires:
            - publish
      - docker:
          name: "docker-latest"
          level: "latest"
          requires:
            - approval-docker-latest
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*$/
