#Splunk Connect for Syslog (SC4S) by Splunk, Inc.
#
#To the extent possible under law, the person who associated CC0 with
#Splunk Connect for Syslog (SC4S) has waived all copyright and related or neighboring rights
#to Splunk Connect for Syslog (SC4S).
#
#You should have received a copy of the CC0 legalcode along with this
#work.  If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
version: 2.1
orbs:
  go: circleci/go@0.2.0

jobs:
  build-sc4s:
    parameters:
      syslog:
        type: string
    environment:
      SYSLOG: "<< parameters.syslog >>"
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: "Clone Submodules"
          command: |
            git submodule update --init --recursive -- syslog-ng
            git submodule update --init --recursive -- net-snmp
      - when:
          condition:
            not:
              equal: ["release", << parameters.syslog >>]
          steps:
            - run:
                name: "Switch to << parameters.syslog >>"
                command: |
                  cd syslog-ng
                  git checkout $SYSLOG
      - run:
          name: "Pull Centos if its changed"
          command: "docker pull centos:centos8"
      - run:
          name: Github packages docker Login
          command: |
            docker login docker.pkg.github.com -u $GITHUB_USER -p $GITHUB_TOKEN
            docker pull docker.pkg.github.com/splunk/splunk-connect-for-syslog/splunk-connect-for-syslog:edge || true
      - run:
          name: Version
          command: |
            VERSION=$(./semtag getcurrent)
            echo $VERSION
            echo ${VERSION} >package/etc/VERSION
      - run:
          name: "Build Base Image"
          command: docker build -f package/Dockerfile.base . -t splunk/scs:base
      - run:
          name: "Build Image"
          command: docker build -f package/Dockerfile --build-arg SC4S_BASE_IMAGE=base . -t sc4s
      - run:
          name: Github packages push
          command: |
            docker tag sc4s docker.pkg.github.com/splunk/splunk-connect-for-syslog/splunk-connect-for-syslog:<< parameters.syslog >>-<< pipeline.git.revision >>
            docker push docker.pkg.github.com/splunk/splunk-connect-for-syslog/splunk-connect-for-syslog:<< parameters.syslog >>-<< pipeline.git.revision >>
      - when:
          condition:
            equal: [develop, << pipeline.git.branch >>]
          steps:
            - run:
                name: publish edge gh packages
                command: |
                  docker tag sc4s docker.pkg.github.com/splunk/splunk-connect-for-syslog/splunk-connect-for-syslog:edge
                  docker push docker.pkg.github.com/splunk/splunk-connect-for-syslog/splunk-connect-for-syslog:edge
            - run:
                name: Docker Login
                command: |
                  docker login -u $DOCKER_USER -p $DOCKER_PASS
            - run:
                name: publish edge gh packages
                command: |
                  docker tag sc4s splunk/scs:edge
                  docker push splunk/scs:edge

  build-splunk:
    parameters:
      splunk_version:
        type: string
    machine:
      image: ubuntu-1604:202007-01
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: "Clone Submodules"
          command: |
            git submodule update --init --recursive -- splunk/etc/apps/splunk_env_indexer
            git submodule update --init --recursive -- deps/build/addonfactory_test_matrix_splunk
      - run:
          name: Github packages docker Login
          command: |
            docker login docker.pkg.github.com -u $GITHUB_USER -p $GITHUB_TOKEN
      - run:
          name: "Build Image"
          command: |
            pip install git+https://github.com/pixelb/crudini
            export SPLUNK_VERSION=$(crudini --get deps/build/addonfactory_test_matrix_splunk/splunk_matrix.conf "<<parameters.splunk_version>>" VERSION)
            docker build --build-arg SPLUNK_VERSION=$SPLUNK_VERSION -f splunk/Dockerfile . -t splunk
      - run:
          name: Github packages push
          command: |
            docker tag splunk docker.pkg.github.com/splunk/splunk-connect-for-syslog/splunk-connect-for-syslog:splunk-<< parameters.splunk_version >>-<< pipeline.git.revision >>
            docker push docker.pkg.github.com/splunk/splunk-connect-for-syslog/splunk-connect-for-syslog:splunk-<< parameters.splunk_version >>-<< pipeline.git.revision >>

  test-sc4s:
    parameters:
      syslog:
        type: string
      splunk_version:
        type: string
    resource_class: xlarge
    docker:
      - image: circleci/python:3.7
      - image: docker.pkg.github.com/splunk/splunk-connect-for-syslog/splunk-connect-for-syslog:<< parameters.syslog >>-<< pipeline.git.revision >>
        name: sc4s
        auth:
          username: $GITHUB_USER
          password: $GITHUB_TOKEN
        environment:
          SPLUNK_HEC_URL: https://splunk:8088
          SPLUNK_HEC_TOKEN: 70b6ae71-76b3-4c38-9597-0c5b37ad9630
          SC4S_DEST_SPLUNK_SC4S_METRICS_HEC: "yes"
          SC4S_SOURCE_TLS_ENABLE: "no"
          SC4S_DEST_SPLUNK_HEC_TLS_VERIFY: "no"
          SC4S_LISTEN_JUNIPER_NETSCREEN_TCP_PORT: 5000
          SC4S_LISTEN_CISCO_ASA_TCP_PORT: 5001
          SC4S_LISTEN_CISCO_IOS_TCP_PORT: 5002
          SC4S_LISTEN_CISCO_MERAKI_TCP_PORT: 5003
          SC4S_LISTEN_JUNIPER_IDP_TCP_PORT: 5004
          SC4S_LISTEN_PALOALTO_PANOS_TCP_PORT: 5005
          SC4S_LISTEN_PFSENSE_TCP_PORT: 5006
          SC4S_LISTEN_CISCO_ASA_UDP_PORT: 5001
          SC4S_LISTEN_CISCO_IOS_UDP_PORT: 5002
          SC4S_LISTEN_CISCO_MERAKI_UDP_PORT: 5003
          SC4S_LISTEN_JUNIPER_IDP_UDP_PORT: 5004
          SC4S_LISTEN_PALOALTO_PANOS_UDP_PORT: 5005
          SC4S_LISTEN_PFSENSE_UDP_PORT: 5006
          SC4S_LISTEN_SIMPLE_TEST_ONE_TCP_PORT: 5008
          SC4S_LISTEN_SIMPLE_TEST_TWO_TCP_PORT: 5009
          SC4S_ARCHIVE_GLOBAL: "no"
          SC4S_LISTEN_CHECKPOINT_SPLUNK_NOISE_CONTROL: "yes"
      - image: docker.pkg.github.com/splunk/splunk-connect-for-syslog/splunk-connect-for-syslog:splunk-<< parameters.splunk_version >>-<< pipeline.git.revision >>
        name: splunk
        auth:
          username: $GITHUB_USER
          password: $GITHUB_TOKEN
        environment:
          SPLUNK_HEC_TOKEN: 70b6ae71-76b3-4c38-9597-0c5b37ad9630
          SPLUNK_PASSWORD: Changed@11
          SPLUNK_START_ARGS: --accept-license
    steps:
      - checkout
      - run:
          name: Setup for testing
          command: |
            pip install -r tests/requirements.txt
            mkdir test-results
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for splunk
          command: dockerize -wait http://splunk:8000 -timeout 5m
      - run:
          name: Wait for sc4s
          command: dockerize -wait tcp://sc4s:514 -timeout 5m
      - run:
          name: test
          command: |
            pytest -v --tb=long \
              --splunk_type=external \
              --splunk_hec_token=70b6ae71-76b3-4c38-9597-0c5b37ad9630 \
              --splunk_host=splunk \
              --sc4s_host=sc4s \
              --junitxml=test-results/test.xml \
              -n auto
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results
  test-sc4s-byoe:
    parameters:
      syslog:
        type: string
      splunk_version:
        type: string
    resource_class: xlarge
    docker:
      - image: centos:8
      - image: docker.pkg.github.com/splunk/splunk-connect-for-syslog/splunk-connect-for-syslog:splunk-<< parameters.splunk_version >>-<< pipeline.git.revision >>
        name: splunk
        auth:
          username: $GITHUB_USER
          password: $GITHUB_TOKEN
        environment:
          SPLUNK_HEC_TOKEN: 70b6ae71-76b3-4c38-9597-0c5b37ad9630
          SPLUNK_PASSWORD: Changed@11
          SPLUNK_START_ARGS: --accept-license
    environment:
      SPLUNK_HEC_URL: https://splunk:8088
      SPLUNK_HEC_TOKEN: 70b6ae71-76b3-4c38-9597-0c5b37ad9630
      SC4S_DEST_SPLUNK_SC4S_METRICS_HEC: "yes"
      SC4S_SOURCE_TLS_ENABLE: "no"
      SC4S_DEST_SPLUNK_HEC_TLS_VERIFY: "no"
      SC4S_LISTEN_JUNIPER_NETSCREEN_TCP_PORT: 5000
      SC4S_LISTEN_CISCO_ASA_TCP_PORT: 5001
      SC4S_LISTEN_CISCO_IOS_TCP_PORT: 5002
      SC4S_LISTEN_CISCO_MERAKI_TCP_PORT: 5003
      SC4S_LISTEN_JUNIPER_IDP_TCP_PORT: 5004
      SC4S_LISTEN_PALOALTO_PANOS_TCP_PORT: 5005
      SC4S_LISTEN_PFSENSE_TCP_PORT: 5006
      SC4S_LISTEN_CISCO_ASA_UDP_PORT: 5001
      SC4S_LISTEN_CISCO_IOS_UDP_PORT: 5002
      SC4S_LISTEN_CISCO_MERAKI_UDP_PORT: 5003
      SC4S_LISTEN_JUNIPER_IDP_UDP_PORT: 5004
      SC4S_LISTEN_PALOALTO_PANOS_UDP_PORT: 5005
      SC4S_LISTEN_PFSENSE_UDP_PORT: 5006
      SC4S_LISTEN_SIMPLE_TEST_ONE_TCP_PORT: 5008
      SC4S_LISTEN_SIMPLE_TEST_TWO_TCP_PORT: 5009
      SC4S_ARCHIVE_GLOBAL: "no"
      SC4S_LISTEN_CHECKPOINT_SPLUNK_NOISE_CONTROL: "yes"
      SC4S_ETC: /etc/syslog-ng
      SC4S_TLS: /etc/syslog-ng/tls
      SC4S_VAR: /var/syslog-ng
      SC4S_SBIN: /usr/sbin
    steps:
      - run:
          name: install dockerize
          command: |
            dnf install wget curl sudo -y
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Install syslog-ng
          command: |
            dnf install 'dnf-command(copr)' -y
            dnf install epel-release -y
            dnf copr enable czanik/syslog-ng329  -y
            dnf install git openssh-clients syslog-ng syslog-ng-python syslog-ng-http syslog-ng-afsnmp net-snmp python3-pip gcc python3-devel -y
      - checkout
      - run:
          name: Wait for splunk
          command: dockerize -wait http://splunk:8000 -timeout 5m
      - run:
          name: Version
          command: |
            VERSION=$(./semtag getcurrent)
            echo $VERSION
            echo ${VERSION} >/etc/syslog-ng/VERSION
      - run:
          name: Setup for testing
          command: |
            curl -o /usr/local/bin/gomplate -sSL https://github.com/hairyhenderson/gomplate/releases/download/v3.5.0/gomplate_linux-amd64-slim
            chmod 755 /usr/local/bin/gomplate
            curl -fsSL https://goss.rocks/install | GOSS_VER=v0.3.13 sh
            pip3 install -r tests/requirements.txt
            mkdir test-results
            cp -r -f  package/etc/* /etc/syslog-ng
            cp package/sbin/entrypoint.sh /sbin/sc4s.sh
      - run:
          name: test
          command: |
            /sbin/sc4s.sh &
            dockerize -wait tcp://127.0.0.1:514 -timeout 5m
            pytest -v --tb=long \
              --splunk_type=external \
              --splunk_hec_token=70b6ae71-76b3-4c38-9597-0c5b37ad9630 \
              --splunk_host=splunk \
              --sc4s_host=127.0.0.1 \
              --junitxml=test-results/test.xml \
              -n auto
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results

  test-with-add-on:
    parameters:
      syslog:
        type: string
      splunk_version:
        type: string
      add-on:
        type: string
    docker:
      - image: circleci/python:3.7
    environment:
      SPLUNK_VERSION: "<< parameters.splunk_version >>"
      TEST_ADDON: "<< parameters.add-on >>"
      SC4S_IMAGE: "docker.pkg.github.com/splunk/splunk-connect-for-syslog/splunk-connect-for-syslog:<< parameters.syslog >>-<< pipeline.git.revision >>"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Version
          command: |
            VERSION=$(./semtag getcurrent)
            echo $VERSION
            echo ${VERSION} >package/VERSION
      - run:
          name: Docker login
          command: docker login docker.pkg.github.com -u $GITHUB_USER -p $GITHUB_TOKEN
      - run:
          name: test
          command: |
            git submodule update --init --recursive -- add-ons/$TEST_ADDON
            cd add-ons/$TEST_ADDON
            cp pytest.expect.baseline pytest.expect || true
            pip install git+https://github.com/pixelb/crudini
            export SPLUNK_VERSION=$(crudini --get deps/build/addonfactory_test_matrix_splunk/splunk_matrix.conf $SPLUNK_VERSION VERSION)
            export SPLUNK_APP_ID=$(crudini --get package/default/app.conf id name)
            docker-compose -f ../../docker-compose-add-on.yml build
            docker-compose -f ../../docker-compose-add-on.yml up -d splunk
            until docker-compose -f ../../docker-compose-add-on.yml logs splunk | grep "Ansible playbook complete" ; do sleep 1; done
            docker-compose -f ../../docker-compose-add-on.yml up --abort-on-container-exit
            cd ../..
          no_output_timeout: 1h
      - run:
          name: collect results
          when: always
          command: |
            docker volume ls
            docker container create --name dummy \
                                -v project_test_results:/work/test-results \
                                registry.access.redhat.com/ubi7/ubi
            docker cp dummy:/work/test-results/test.xml test-results/  || true
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results

  tag:
    parameters:
      semtag:
        type: string
    docker:
      - image: circleci/python:3.7
    environment:
      SEMTAG: "<< parameters.semtag >>"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "7c:e9:cc:8d:8e:4d:9c:17:1d:e3:96:23:ce:bd:a4:c3"
      - checkout
      - run:
          name: TAG
          command: |
            ./semtag ${SEMTAG} -f

  publish_release:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Docker Login
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Release Docker
          command: |
            if [ -n "${CIRCLE_TAG}" ]; then VERSION=${CIRCLE_TAG}; else VERSION="$(./semtag getcurrent)"; fi
            VERSION_DOCKER_M=$(echo  $VERSION | sed -n 's/v\([0-9]\).*/\1/p')
            VERSION_DOCKER_MM=$(echo  $VERSION | sed -n 's/v\([0-9]*\.[0-9]*\).*/\1/p')
            VERSION_DOCKER_MMP=$(echo  $VERSION | sed -n 's/v\([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p')
            docker pull splunk/scs:<< pipeline.git.revision >>
            #latest
            docker tag splunk/scs:<< pipeline.git.revision >> splunk/scs:latest
            docker push splunk/scs:latest
            #MM
            docker tag splunk/scs:<< pipeline.git.revision >> splunk/scs:$VERSION_DOCKER_MM
            docker push splunk/scs:$VERSION_DOCKER_MM
            #M
            docker tag splunk/scs:<< pipeline.git.revision >> splunk/scs:$VERSION_DOCKER_M
            docker push splunk/scs:$VERSION_DOCKER_M

  merge-beta-to-master:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "7c:e9:cc:8d:8e:4d:9c:17:1d:e3:96:23:ce:bd:a4:c3"
      - checkout
      - run:
          name: Merge
          command: |
            git config --global user.email "addonreleasesrv@splunk.com"
            git config --global user.name "Add on release service"
            git pull origin master
            git merge master -m "Merge from master"
            git checkout master
            git merge << pipeline.git.revision >>
            git push

  publish:
    docker:
      - image: circleci/python:3.7
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - go/install
      - run:
          name: "Setup for pandoc"
          command: |
            wget https://github.com/jgm/pandoc/releases/download/2.10.1/pandoc-2.10.1-1-amd64.deb
            sudo dpkg -i pandoc-2.10.1-1-amd64.deb
            sudo apt-get install texlive
            pandoc -s --pdf-engine=pdflatex -o SC4S_docs.pdf $(find . -type f -name "*.md")
            cp SC4S_docs.pdf /tmp/workspace/SC4S_docs.pdf
      - run:
          name: BYOE Config
          command: |
            if [ -n "${CIRCLE_TAG}" ]; then VERSION=${CIRCLE_TAG}; else VERSION="$(./semtag getcurrent)"; fi
            VERSION_DOCKER_MMP=$(echo  $VERSION | sed -n 's/v\([0-9]*\.[0-9]*\.[0-9]*[^\+]*\).*/\1/p')
            echo ${VERSION} >package/etc/VERSION
            tar rvf /tmp/workspace/baremetal.tar -C package/etc .
            tar rvf /tmp/workspace/baremetal.tar -C package/sbin entrypoint.sh
      - run:
          name: Docker Login
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Github packages docker Login
          command: |
            docker login docker.pkg.github.com -u $GITHUB_USER -p $GITHUB_TOKEN
            docker pull docker.pkg.github.com/splunk/splunk-connect-for-syslog/splunk-connect-for-syslog:release-<< pipeline.git.revision >>
      - run:
          name: Release Docker Hub
          command: |
            if [ -n "${CIRCLE_TAG}" ]; then VERSION=${CIRCLE_TAG}; else VERSION="$(./semtag getcurrent)"; fi
            VERSION_DOCKER_MMP=$(echo  $VERSION | sed -n 's/v\([0-9]*\.[0-9]*\.[0-9]*[^\+]*\).*/\1/p')
            docker create --name bump docker.pkg.github.com/splunk/splunk-connect-for-syslog/splunk-connect-for-syslog:release-<< pipeline.git.revision >>
            docker cp package/etc/VERSION bump:/opt/syslog-ng/etc/VERSION
            docker commit -m "bump version" bump release
            docker tag release splunk/scs:<< pipeline.git.revision >>
            docker push splunk/scs:<< pipeline.git.revision >>
            docker tag release splunk/scs:${CIRCLE_SHA1:0:7}
            docker push splunk/scs:${CIRCLE_SHA1:0:7}
            docker tag release splunk/scs:${VERSION_DOCKER_MMP}
            docker push splunk/scs:${VERSION_DOCKER_MMP}
            docker save splunk/scs:${VERSION_DOCKER_MMP} | gzip -c > /tmp/workspace/oci_container.tar.gz
      - run:
          name: "Publish on GitHub"
          command: |
            go get -v -u github.com/tcnksm/ghr
            PATH=$PATH:/usr/local/go/bin
            if [ -n "${CIRCLE_TAG}" ]; then VERSION=${CIRCLE_TAG}; else VERSION="$(./semtag getcurrent)"; fi
            echo ${VERSION} >package/VERSION
            [ "$(./semtag getfinal)" != "${CIRCLE_TAG}" ] && ISPRE="-prerelease" || ISPRE=""
            $HOME/go/bin/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${ISPRE} -delete ${VERSION} /tmp/workspace/

      - store_artifacts:
          path: /tmp/workspace/

workflows:
  version: 2
  build_test:
    jobs:
      - build-sc4s:
          matrix:
            parameters:
              syslog: ["release"]
          filters:
            branches:
              ignore: master
      - build-splunk:
          matrix:
            parameters:
              splunk_version: ["7.2", "7.3", "8.0"]
          filters:
            branches:
              ignore: master
      - test-sc4s-byoe:
          requires:
            - build-splunk
          matrix:
            parameters:
              syslog: ["329"]
              splunk_version: ["8.0"]
      - test-sc4s:
          requires:
            - build-sc4s
            - build-splunk
          matrix:
            parameters:
              syslog: ["release"]
              splunk_version: ["7.2", "7.3", "8.0"]
      - test-with-add-on:
          requires:
            - test-sc4s
          matrix:
            parameters:
              syslog: ["release"]
              splunk_version: ["8.0"]
              add-on:
                - splunk-add-on-for-cef
                - splunk-add-on-for-cisco-asa
                - splunk-add-on-for-cisco-esa
                - splunk-add-on-for-cisco-identity-services
                - splunk-add-on-for-cisco-wsa
                - splunk-add-on-for-citrix-netscaler
                - splunk-add-on-for-cyberark
                - splunk-add-on-for-f5-big-ip
                - splunk-add-on-for-forcepoint-web-security
                - splunk-add-on-for-imperva-securesphere-waf
                - splunk-add-on-for-infoblox
                - splunk-add-on-for-juniper
                - splunk-add-on-for-mcafee-epo-syslog
                - splunk-add-on-for-mcafee-web-gateway
                - splunk-add-on-for-rsa-securid
                - splunk-add-on-for-symantec-blue-coat-proxysg
                - splunk-add-on-for-symantec-endpoint-protection
                - splunk-add-on-for-websense-dlp
      - tag:
          name: tag-alpha
          requires:
            - test-sc4s
          semtag: alpha
          filters:
            branches:
              only: develop

  release:
    jobs:
      - publish:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*.*$/
      - approval-tag-beta:
          requires:
            - publish
          type: approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-alpha\.\d+/
      - tag:
          name: tag-beta
          semtag: beta
          requires:
            - approval-tag-beta
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-alpha\.\d+/
      - approval-merge-beta-to-master:
          requires:
            - publish
          type: approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-beta\.\d+/
      - merge-beta-to-master:
          requires:
            - approval-merge-beta-to-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-beta\.\d+/
      - approval-tag-final-major:
          type: approval
          requires:
            - merge-beta-to-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-beta\.\d+/
      - tag:
          name: tag-final-major
          semtag: "final -s major"
          requires:
            - approval-tag-final-major
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-beta\.\d+/
      - approval-tag-final-minor:
          type: approval
          requires:
            - merge-beta-to-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-beta\.\d+/
      - tag:
          name: tag-final-minor
          semtag: "final -s minor"
          requires:
            - approval-tag-final-minor
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-beta\.\d+/
      - approval-tag-final-patch:
          type: approval
          requires:
            - merge-beta-to-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-beta\.\d+/
      - tag:
          name: tag-final-patch
          semtag: "final -s patch"
          requires:
            - approval-tag-final-patch
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-beta\.\d+/
      - publish_release:
          requires:
            - publish
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*$/
